#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TourDuLich
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_TOURDULICH")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTTOUR(CTTOUR instance);
    partial void UpdateCTTOUR(CTTOUR instance);
    partial void DeleteCTTOUR(CTTOUR instance);
    partial void InsertXE(XE instance);
    partial void UpdateXE(XE instance);
    partial void DeleteXE(XE instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertCHITIETNV(CHITIETNV instance);
    partial void UpdateCHITIETNV(CHITIETNV instance);
    partial void DeleteCHITIETNV(CHITIETNV instance);
    partial void InsertGHE(GHE instance);
    partial void UpdateGHE(GHE instance);
    partial void DeleteGHE(GHE instance);
    partial void InsertHINHANH(HINHANH instance);
    partial void UpdateHINHANH(HINHANH instance);
    partial void DeleteHINHANH(HINHANH instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAITOUR(LOAITOUR instance);
    partial void UpdateLOAITOUR(LOAITOUR instance);
    partial void DeleteLOAITOUR(LOAITOUR instance);
    partial void InsertLOAIXE(LOAIXE instance);
    partial void UpdateLOAIXE(LOAIXE instance);
    partial void DeleteLOAIXE(LOAIXE instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTOUR(TOUR instance);
    partial void UpdateTOUR(TOUR instance);
    partial void DeleteTOUR(TOUR instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::TourDuLich.Properties.Settings.Default.QL_TOURDULICHConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTTOUR> CTTOURs
		{
			get
			{
				return this.GetTable<CTTOUR>();
			}
		}
		
		public System.Data.Linq.Table<XE> XEs
		{
			get
			{
				return this.GetTable<XE>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETNV> CHITIETNVs
		{
			get
			{
				return this.GetTable<CHITIETNV>();
			}
		}
		
		public System.Data.Linq.Table<GHE> GHEs
		{
			get
			{
				return this.GetTable<GHE>();
			}
		}
		
		public System.Data.Linq.Table<HINHANH> HINHANHs
		{
			get
			{
				return this.GetTable<HINHANH>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAITOUR> LOAITOURs
		{
			get
			{
				return this.GetTable<LOAITOUR>();
			}
		}
		
		public System.Data.Linq.Table<LOAIXE> LOAIXEs
		{
			get
			{
				return this.GetTable<LOAIXE>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TOUR> TOURs
		{
			get
			{
				return this.GetTable<TOUR>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTOUR")]
	public partial class CTTOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATOUR;
		
		private string _BIENSOXE;
		
		private System.Nullable<System.DateTime> _NGAYBD;
		
		private System.Nullable<System.DateTime> _NGAYKT;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATOURChanging(string value);
    partial void OnMATOURChanged();
    partial void OnBIENSOXEChanging(string value);
    partial void OnBIENSOXEChanged();
    partial void OnNGAYBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKTChanged();
    #endregion
		
		public CTTOUR()
		{
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATOUR", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATOUR
		{
			get
			{
				return this._MATOUR;
			}
			set
			{
				if ((this._MATOUR != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATOURChanging(value);
					this.SendPropertyChanging();
					this._MATOUR = value;
					this.SendPropertyChanged("MATOUR");
					this.OnMATOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIENSOXE", DbType="VarChar(10)")]
		public string BIENSOXE
		{
			get
			{
				return this._BIENSOXE;
			}
			set
			{
				if ((this._BIENSOXE != value))
				{
					this.OnBIENSOXEChanging(value);
					this.SendPropertyChanging();
					this._BIENSOXE = value;
					this.SendPropertyChanged("BIENSOXE");
					this.OnBIENSOXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_CTTOUR", Storage="_TOUR", ThisKey="MATOUR", OtherKey="MATOUR", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.CTTOUR = null;
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.CTTOUR = this;
						this._MATOUR = value.MATOUR;
					}
					else
					{
						this._MATOUR = default(string);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XE")]
	public partial class XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BIENSOXE;
		
		private System.Nullable<int> _MANV;
		
		private System.Nullable<int> _TINHTRANG;
		
		private System.Nullable<int> _MALOAIXE;
		
		private EntitySet<GHE> _GHEs;
		
		private EntityRef<LOAIXE> _LOAIXE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIENSOXEChanging(string value);
    partial void OnBIENSOXEChanged();
    partial void OnMANVChanging(System.Nullable<int> value);
    partial void OnMANVChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    partial void OnMALOAIXEChanging(System.Nullable<int> value);
    partial void OnMALOAIXEChanged();
    #endregion
		
		public XE()
		{
			this._GHEs = new EntitySet<GHE>(new Action<GHE>(this.attach_GHEs), new Action<GHE>(this.detach_GHEs));
			this._LOAIXE = default(EntityRef<LOAIXE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIENSOXE", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BIENSOXE
		{
			get
			{
				return this._BIENSOXE;
			}
			set
			{
				if ((this._BIENSOXE != value))
				{
					this.OnBIENSOXEChanging(value);
					this.SendPropertyChanging();
					this._BIENSOXE = value;
					this.SendPropertyChanged("BIENSOXE");
					this.OnBIENSOXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Int")]
		public System.Nullable<int> MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIXE", DbType="Int")]
		public System.Nullable<int> MALOAIXE
		{
			get
			{
				return this._MALOAIXE;
			}
			set
			{
				if ((this._MALOAIXE != value))
				{
					if (this._LOAIXE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIXEChanging(value);
					this.SendPropertyChanging();
					this._MALOAIXE = value;
					this.SendPropertyChanged("MALOAIXE");
					this.OnMALOAIXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XE_GHE", Storage="_GHEs", ThisKey="BIENSOXE", OtherKey="BIENSOXE")]
		public EntitySet<GHE> GHEs
		{
			get
			{
				return this._GHEs;
			}
			set
			{
				this._GHEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_XE", Storage="_LOAIXE", ThisKey="MALOAIXE", OtherKey="MALOAIXE", IsForeignKey=true)]
		public LOAIXE LOAIXE
		{
			get
			{
				return this._LOAIXE.Entity;
			}
			set
			{
				LOAIXE previousValue = this._LOAIXE.Entity;
				if (((previousValue != value) 
							|| (this._LOAIXE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIXE.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._LOAIXE.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._MALOAIXE = value.MALOAIXE;
					}
					else
					{
						this._MALOAIXE = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIXE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GHEs(GHE entity)
		{
			this.SendPropertyChanging();
			entity.XE = this;
		}
		
		private void detach_GHEs(GHE entity)
		{
			this.SendPropertyChanging();
			entity.XE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private string _MATOUR;
		
		private string _MAGHE;
		
		private System.Nullable<int> _SLNGUOI;
		
		private EntityRef<GHE> _GHE;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMATOURChanging(string value);
    partial void OnMATOURChanged();
    partial void OnMAGHEChanging(string value);
    partial void OnMAGHEChanged();
    partial void OnSLNGUOIChanging(System.Nullable<int> value);
    partial void OnSLNGUOIChanged();
    #endregion
		
		public CTHD()
		{
			this._GHE = default(EntityRef<GHE>);
			this._HOADON = default(EntityRef<HOADON>);
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATOUR", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATOUR
		{
			get
			{
				return this._MATOUR;
			}
			set
			{
				if ((this._MATOUR != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATOURChanging(value);
					this.SendPropertyChanging();
					this._MATOUR = value;
					this.SendPropertyChanged("MATOUR");
					this.OnMATOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGHE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGHE
		{
			get
			{
				return this._MAGHE;
			}
			set
			{
				if ((this._MAGHE != value))
				{
					if (this._GHE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGHEChanging(value);
					this.SendPropertyChanging();
					this._MAGHE = value;
					this.SendPropertyChanged("MAGHE");
					this.OnMAGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLNGUOI", DbType="Int")]
		public System.Nullable<int> SLNGUOI
		{
			get
			{
				return this._SLNGUOI;
			}
			set
			{
				if ((this._SLNGUOI != value))
				{
					this.OnSLNGUOIChanging(value);
					this.SendPropertyChanging();
					this._SLNGUOI = value;
					this.SendPropertyChanged("SLNGUOI");
					this.OnSLNGUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GHE_CTHD", Storage="_GHE", ThisKey="MAGHE", OtherKey="MAGHE", IsForeignKey=true)]
		public GHE GHE
		{
			get
			{
				return this._GHE.Entity;
			}
			set
			{
				GHE previousValue = this._GHE.Entity;
				if (((previousValue != value) 
							|| (this._GHE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GHE.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._GHE.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAGHE = value.MAGHE;
					}
					else
					{
						this._MAGHE = default(string);
					}
					this.SendPropertyChanged("GHE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_CTHD", Storage="_TOUR", ThisKey="MATOUR", OtherKey="MATOUR", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MATOUR = value.MATOUR;
					}
					else
					{
						this._MATOUR = default(string);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETNV")]
	public partial class CHITIETNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANV;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private string _CMND;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(int value);
    partial void OnMANVChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public CHITIETNV()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETNV", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHITIETNV = null;
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHITIETNV = this;
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_CHITIETNV", Storage="_TAIKHOAN", ThisKey="SDT", OtherKey="TENDN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.CHITIETNVs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETNVs.Add(this);
						this._SDT = value.TENDN;
					}
					else
					{
						this._SDT = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GHE")]
	public partial class GHE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGHE;
		
		private System.Nullable<int> _TINHTRANG;
		
		private string _BIENSOXE;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<XE> _XE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGHEChanging(string value);
    partial void OnMAGHEChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    partial void OnBIENSOXEChanging(string value);
    partial void OnBIENSOXEChanged();
    #endregion
		
		public GHE()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._XE = default(EntityRef<XE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGHE", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGHE
		{
			get
			{
				return this._MAGHE;
			}
			set
			{
				if ((this._MAGHE != value))
				{
					this.OnMAGHEChanging(value);
					this.SendPropertyChanging();
					this._MAGHE = value;
					this.SendPropertyChanged("MAGHE");
					this.OnMAGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIENSOXE", DbType="VarChar(20)")]
		public string BIENSOXE
		{
			get
			{
				return this._BIENSOXE;
			}
			set
			{
				if ((this._BIENSOXE != value))
				{
					if (this._XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBIENSOXEChanging(value);
					this.SendPropertyChanging();
					this._BIENSOXE = value;
					this.SendPropertyChanged("BIENSOXE");
					this.OnBIENSOXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GHE_CTHD", Storage="_CTHDs", ThisKey="MAGHE", OtherKey="MAGHE")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XE_GHE", Storage="_XE", ThisKey="BIENSOXE", OtherKey="BIENSOXE", IsForeignKey=true)]
		public XE XE
		{
			get
			{
				return this._XE.Entity;
			}
			set
			{
				XE previousValue = this._XE.Entity;
				if (((previousValue != value) 
							|| (this._XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XE.Entity = null;
						previousValue.GHEs.Remove(this);
					}
					this._XE.Entity = value;
					if ((value != null))
					{
						value.GHEs.Add(this);
						this._BIENSOXE = value.BIENSOXE;
					}
					else
					{
						this._BIENSOXE = default(string);
					}
					this.SendPropertyChanged("XE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.GHE = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.GHE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHANH")]
	public partial class HINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHINH;
		
		private string _TENHINH;
		
		private EntitySet<TOUR> _TOURs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHINHChanging(int value);
    partial void OnMAHINHChanged();
    partial void OnTENHINHChanging(string value);
    partial void OnTENHINHChanged();
    #endregion
		
		public HINHANH()
		{
			this._TOURs = new EntitySet<TOUR>(new Action<TOUR>(this.attach_TOURs), new Action<TOUR>(this.detach_TOURs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHINH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHINH
		{
			get
			{
				return this._MAHINH;
			}
			set
			{
				if ((this._MAHINH != value))
				{
					this.OnMAHINHChanging(value);
					this.SendPropertyChanging();
					this._MAHINH = value;
					this.SendPropertyChanged("MAHINH");
					this.OnMAHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHINH", DbType="VarChar(50)")]
		public string TENHINH
		{
			get
			{
				return this._TENHINH;
			}
			set
			{
				if ((this._TENHINH != value))
				{
					this.OnTENHINHChanging(value);
					this.SendPropertyChanging();
					this._TENHINH = value;
					this.SendPropertyChanged("TENHINH");
					this.OnTENHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHANH_TOUR", Storage="_TOURs", ThisKey="MAHINH", OtherKey="MAHINH")]
		public EntitySet<TOUR> TOURs
		{
			get
			{
				return this._TOURs;
			}
			set
			{
				this._TOURs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.HINHANH = this;
		}
		
		private void detach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.HINHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private System.Nullable<int> _MAKH;
		
		private System.Nullable<int> _MANV;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<int> _TONGTIEN;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnMANVChanging(System.Nullable<int> value);
    partial void OnMANVChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<int> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Int")]
		public System.Nullable<int> MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int")]
		public System.Nullable<int> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_CTHDs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _TENKH;
		
		private string _SDT;
		
		private string _CMND;
		
		private string _DIACHI;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITOUR")]
	public partial class LOAITOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAITOUR;
		
		private string _TENLOAITOUR;
		
		private EntitySet<TOUR> _TOURs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAITOURChanging(int value);
    partial void OnMALOAITOURChanged();
    partial void OnTENLOAITOURChanging(string value);
    partial void OnTENLOAITOURChanged();
    #endregion
		
		public LOAITOUR()
		{
			this._TOURs = new EntitySet<TOUR>(new Action<TOUR>(this.attach_TOURs), new Action<TOUR>(this.detach_TOURs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAITOUR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAITOUR
		{
			get
			{
				return this._MALOAITOUR;
			}
			set
			{
				if ((this._MALOAITOUR != value))
				{
					this.OnMALOAITOURChanging(value);
					this.SendPropertyChanging();
					this._MALOAITOUR = value;
					this.SendPropertyChanged("MALOAITOUR");
					this.OnMALOAITOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAITOUR", DbType="NVarChar(50)")]
		public string TENLOAITOUR
		{
			get
			{
				return this._TENLOAITOUR;
			}
			set
			{
				if ((this._TENLOAITOUR != value))
				{
					this.OnTENLOAITOURChanging(value);
					this.SendPropertyChanging();
					this._TENLOAITOUR = value;
					this.SendPropertyChanged("TENLOAITOUR");
					this.OnTENLOAITOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITOUR_TOUR", Storage="_TOURs", ThisKey="MALOAITOUR", OtherKey="MALOAITOUR")]
		public EntitySet<TOUR> TOURs
		{
			get
			{
				return this._TOURs;
			}
			set
			{
				this._TOURs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.LOAITOUR = this;
		}
		
		private void detach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.LOAITOUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIXE")]
	public partial class LOAIXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIXE;
		
		private string _TENLOAI;
		
		private System.Nullable<int> _SOGHE;
		
		private System.Nullable<int> _CHIPHI;
		
		private EntitySet<XE> _XEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIXEChanging(int value);
    partial void OnMALOAIXEChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnSOGHEChanging(System.Nullable<int> value);
    partial void OnSOGHEChanged();
    partial void OnCHIPHIChanging(System.Nullable<int> value);
    partial void OnCHIPHIChanged();
    #endregion
		
		public LOAIXE()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIXE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAIXE
		{
			get
			{
				return this._MALOAIXE;
			}
			set
			{
				if ((this._MALOAIXE != value))
				{
					this.OnMALOAIXEChanging(value);
					this.SendPropertyChanging();
					this._MALOAIXE = value;
					this.SendPropertyChanged("MALOAIXE");
					this.OnMALOAIXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(20)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOGHE", DbType="Int")]
		public System.Nullable<int> SOGHE
		{
			get
			{
				return this._SOGHE;
			}
			set
			{
				if ((this._SOGHE != value))
				{
					this.OnSOGHEChanging(value);
					this.SendPropertyChanging();
					this._SOGHE = value;
					this.SendPropertyChanged("SOGHE");
					this.OnSOGHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHIPHI", DbType="Int")]
		public System.Nullable<int> CHIPHI
		{
			get
			{
				return this._CHIPHI;
			}
			set
			{
				if ((this._CHIPHI != value))
				{
					this.OnCHIPHIChanging(value);
					this.SendPropertyChanging();
					this._CHIPHI = value;
					this.SendPropertyChanged("CHIPHI");
					this.OnCHIPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_XE", Storage="_XEs", ThisKey="MALOAIXE", OtherKey="MALOAIXE")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANV;
		
		private string _TENNV;
		
		private System.Nullable<int> _LUONGCB;
		
		private string _HINHANH;
		
		private EntityRef<CHITIETNV> _CHITIETNV;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(int value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnLUONGCBChanging(System.Nullable<int> value);
    partial void OnLUONGCBChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CHITIETNV = default(EntityRef<CHITIETNV>);
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(50)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONGCB", DbType="Int")]
		public System.Nullable<int> LUONGCB
		{
			get
			{
				return this._LUONGCB;
			}
			set
			{
				if ((this._LUONGCB != value))
				{
					this.OnLUONGCBChanging(value);
					this.SendPropertyChanging();
					this._LUONGCB = value;
					this.SendPropertyChanged("LUONGCB");
					this.OnLUONGCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="VarChar(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETNV", Storage="_CHITIETNV", ThisKey="MANV", OtherKey="MANV", IsUnique=true, IsForeignKey=false)]
		public CHITIETNV CHITIETNV
		{
			get
			{
				return this._CHITIETNV.Entity;
			}
			set
			{
				CHITIETNV previousValue = this._CHITIETNV.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETNV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETNV.Entity = null;
						previousValue.NHANVIEN = null;
					}
					this._CHITIETNV.Entity = value;
					if ((value != null))
					{
						value.NHANVIEN = this;
					}
					this.SendPropertyChanged("CHITIETNV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NHOM;
		
		private string _PHANQUYEN1;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNHOMChanging(string value);
    partial void OnNHOMChanged();
    partial void OnPHANQUYEN1Changing(string value);
    partial void OnPHANQUYEN1Changed();
    #endregion
		
		public PHANQUYEN()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHOM", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NHOM
		{
			get
			{
				return this._NHOM;
			}
			set
			{
				if ((this._NHOM != value))
				{
					this.OnNHOMChanging(value);
					this.SendPropertyChanging();
					this._NHOM = value;
					this.SendPropertyChanged("NHOM");
					this.OnNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PHANQUYEN", Storage="_PHANQUYEN1", DbType="VarChar(30)")]
		public string PHANQUYEN1
		{
			get
			{
				return this._PHANQUYEN1;
			}
			set
			{
				if ((this._PHANQUYEN1 != value))
				{
					this.OnPHANQUYEN1Changing(value);
					this.SendPropertyChanging();
					this._PHANQUYEN1 = value;
					this.SendPropertyChanged("PHANQUYEN1");
					this.OnPHANQUYEN1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="NHOM", OtherKey="NHOM")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENDN;
		
		private string _MATKHAU;
		
		private string _NHOM;
		
		private EntitySet<CHITIETNV> _CHITIETNVs;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnNHOMChanging(string value);
    partial void OnNHOMChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._CHITIETNVs = new EntitySet<CHITIETNV>(new Action<CHITIETNV>(this.attach_CHITIETNVs), new Action<CHITIETNV>(this.detach_CHITIETNVs));
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHOM", DbType="NVarChar(30)")]
		public string NHOM
		{
			get
			{
				return this._NHOM;
			}
			set
			{
				if ((this._NHOM != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNHOMChanging(value);
					this.SendPropertyChanging();
					this._NHOM = value;
					this.SendPropertyChanged("NHOM");
					this.OnNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_CHITIETNV", Storage="_CHITIETNVs", ThisKey="TENDN", OtherKey="SDT")]
		public EntitySet<CHITIETNV> CHITIETNVs
		{
			get
			{
				return this._CHITIETNVs;
			}
			set
			{
				this._CHITIETNVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_TAIKHOAN", Storage="_PHANQUYEN", ThisKey="NHOM", OtherKey="NHOM", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._NHOM = value.NHOM;
					}
					else
					{
						this._NHOM = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETNVs(CHITIETNV entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_CHITIETNVs(CHITIETNV entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOUR")]
	public partial class TOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATOUR;
		
		private System.Nullable<int> _MALOAITOUR;
		
		private string _TENTOUR;
		
		private System.Nullable<int> _MAHINH;
		
		private System.Nullable<int> _CHIPHI;
		
		private EntityRef<CTTOUR> _CTTOUR;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<HINHANH> _HINHANH;
		
		private EntityRef<LOAITOUR> _LOAITOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATOURChanging(string value);
    partial void OnMATOURChanged();
    partial void OnMALOAITOURChanging(System.Nullable<int> value);
    partial void OnMALOAITOURChanged();
    partial void OnTENTOURChanging(string value);
    partial void OnTENTOURChanged();
    partial void OnMAHINHChanging(System.Nullable<int> value);
    partial void OnMAHINHChanged();
    partial void OnCHIPHIChanging(System.Nullable<int> value);
    partial void OnCHIPHIChanged();
    #endregion
		
		public TOUR()
		{
			this._CTTOUR = default(EntityRef<CTTOUR>);
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._HINHANH = default(EntityRef<HINHANH>);
			this._LOAITOUR = default(EntityRef<LOAITOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATOUR", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATOUR
		{
			get
			{
				return this._MATOUR;
			}
			set
			{
				if ((this._MATOUR != value))
				{
					this.OnMATOURChanging(value);
					this.SendPropertyChanging();
					this._MATOUR = value;
					this.SendPropertyChanged("MATOUR");
					this.OnMATOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAITOUR", DbType="Int")]
		public System.Nullable<int> MALOAITOUR
		{
			get
			{
				return this._MALOAITOUR;
			}
			set
			{
				if ((this._MALOAITOUR != value))
				{
					if (this._LOAITOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAITOURChanging(value);
					this.SendPropertyChanging();
					this._MALOAITOUR = value;
					this.SendPropertyChanged("MALOAITOUR");
					this.OnMALOAITOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTOUR", DbType="NVarChar(50)")]
		public string TENTOUR
		{
			get
			{
				return this._TENTOUR;
			}
			set
			{
				if ((this._TENTOUR != value))
				{
					this.OnTENTOURChanging(value);
					this.SendPropertyChanging();
					this._TENTOUR = value;
					this.SendPropertyChanged("TENTOUR");
					this.OnTENTOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHINH", DbType="Int")]
		public System.Nullable<int> MAHINH
		{
			get
			{
				return this._MAHINH;
			}
			set
			{
				if ((this._MAHINH != value))
				{
					if (this._HINHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHINHChanging(value);
					this.SendPropertyChanging();
					this._MAHINH = value;
					this.SendPropertyChanged("MAHINH");
					this.OnMAHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHIPHI", DbType="Int")]
		public System.Nullable<int> CHIPHI
		{
			get
			{
				return this._CHIPHI;
			}
			set
			{
				if ((this._CHIPHI != value))
				{
					this.OnCHIPHIChanging(value);
					this.SendPropertyChanging();
					this._CHIPHI = value;
					this.SendPropertyChanged("CHIPHI");
					this.OnCHIPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_CTTOUR", Storage="_CTTOUR", ThisKey="MATOUR", OtherKey="MATOUR", IsUnique=true, IsForeignKey=false)]
		public CTTOUR CTTOUR
		{
			get
			{
				return this._CTTOUR.Entity;
			}
			set
			{
				CTTOUR previousValue = this._CTTOUR.Entity;
				if (((previousValue != value) 
							|| (this._CTTOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTTOUR.Entity = null;
						previousValue.TOUR = null;
					}
					this._CTTOUR.Entity = value;
					if ((value != null))
					{
						value.TOUR = this;
					}
					this.SendPropertyChanged("CTTOUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_CTHD", Storage="_CTHDs", ThisKey="MATOUR", OtherKey="MATOUR")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHANH_TOUR", Storage="_HINHANH", ThisKey="MAHINH", OtherKey="MAHINH", IsForeignKey=true)]
		public HINHANH HINHANH
		{
			get
			{
				return this._HINHANH.Entity;
			}
			set
			{
				HINHANH previousValue = this._HINHANH.Entity;
				if (((previousValue != value) 
							|| (this._HINHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HINHANH.Entity = null;
						previousValue.TOURs.Remove(this);
					}
					this._HINHANH.Entity = value;
					if ((value != null))
					{
						value.TOURs.Add(this);
						this._MAHINH = value.MAHINH;
					}
					else
					{
						this._MAHINH = default(Nullable<int>);
					}
					this.SendPropertyChanged("HINHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITOUR_TOUR", Storage="_LOAITOUR", ThisKey="MALOAITOUR", OtherKey="MALOAITOUR", IsForeignKey=true)]
		public LOAITOUR LOAITOUR
		{
			get
			{
				return this._LOAITOUR.Entity;
			}
			set
			{
				LOAITOUR previousValue = this._LOAITOUR.Entity;
				if (((previousValue != value) 
							|| (this._LOAITOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITOUR.Entity = null;
						previousValue.TOURs.Remove(this);
					}
					this._LOAITOUR.Entity = value;
					if ((value != null))
					{
						value.TOURs.Add(this);
						this._MALOAITOUR = value.MALOAITOUR;
					}
					else
					{
						this._MALOAITOUR = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAITOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
	}
}
#pragma warning restore 1591
