#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnQuanLyTrungTamDayHoc.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_TRUNGTAMANHNGU")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTLOPHOC(CTLOPHOC instance);
    partial void UpdateCTLOPHOC(CTLOPHOC instance);
    partial void DeleteCTLOPHOC(CTLOPHOC instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertCTNHANVIEN(CTNHANVIEN instance);
    partial void UpdateCTNHANVIEN(CTNHANVIEN instance);
    partial void DeleteCTNHANVIEN(CTNHANVIEN instance);
    partial void InsertCTPHONG(CTPHONG instance);
    partial void UpdateCTPHONG(CTPHONG instance);
    partial void DeleteCTPHONG(CTPHONG instance);
    partial void InsertCTHOADON(CTHOADON instance);
    partial void UpdateCTHOADON(CTHOADON instance);
    partial void DeleteCTHOADON(CTHOADON instance);
    partial void InsertCTHOCVIEN(CTHOCVIEN instance);
    partial void UpdateCTHOCVIEN(CTHOCVIEN instance);
    partial void DeleteCTHOCVIEN(CTHOCVIEN instance);
    partial void InsertCHAMCONG(CHAMCONG instance);
    partial void UpdateCHAMCONG(CHAMCONG instance);
    partial void DeleteCHAMCONG(CHAMCONG instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertDIACHI(DIACHI instance);
    partial void UpdateDIACHI(DIACHI instance);
    partial void DeleteDIACHI(DIACHI instance);
    partial void InsertDIEM(DIEM instance);
    partial void UpdateDIEM(DIEM instance);
    partial void DeleteDIEM(DIEM instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertHOCVIEN(HOCVIEN instance);
    partial void UpdateHOCVIEN(HOCVIEN instance);
    partial void DeleteHOCVIEN(HOCVIEN instance);
    partial void InsertLICH(LICH instance);
    partial void UpdateLICH(LICH instance);
    partial void DeleteLICH(LICH instance);
    partial void InsertLOAILOP(LOAILOP instance);
    partial void UpdateLOAILOP(LOAILOP instance);
    partial void DeleteLOAILOP(LOAILOP instance);
    partial void InsertLOPHOC(LOPHOC instance);
    partial void UpdateLOPHOC(LOPHOC instance);
    partial void DeleteLOPHOC(LOPHOC instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DoAnQuanLyTrungTamDayHoc.Properties.Settings.Default.QL_TRUNGTAMANHNGUConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTLOPHOC> CTLOPHOCs
		{
			get
			{
				return this.GetTable<CTLOPHOC>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<CTNHANVIEN> CTNHANVIENs
		{
			get
			{
				return this.GetTable<CTNHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<CTPHONG> CTPHONGs
		{
			get
			{
				return this.GetTable<CTPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CTHOADON> CTHOADONs
		{
			get
			{
				return this.GetTable<CTHOADON>();
			}
		}
		
		public System.Data.Linq.Table<CTHOCVIEN> CTHOCVIENs
		{
			get
			{
				return this.GetTable<CTHOCVIEN>();
			}
		}
		
		public System.Data.Linq.Table<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this.GetTable<CHAMCONG>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<DIACHI> DIACHIs
		{
			get
			{
				return this.GetTable<DIACHI>();
			}
		}
		
		public System.Data.Linq.Table<DIEM> DIEMs
		{
			get
			{
				return this.GetTable<DIEM>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<HOCVIEN> HOCVIENs
		{
			get
			{
				return this.GetTable<HOCVIEN>();
			}
		}
		
		public System.Data.Linq.Table<LICH> LICHes
		{
			get
			{
				return this.GetTable<LICH>();
			}
		}
		
		public System.Data.Linq.Table<LOAILOP> LOAILOPs
		{
			get
			{
				return this.GetTable<LOAILOP>();
			}
		}
		
		public System.Data.Linq.Table<LOPHOC> LOPHOCs
		{
			get
			{
				return this.GetTable<LOPHOC>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTLOPHOC")]
	public partial class CTLOPHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOP;
		
		private string _MAPHONG;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPChanging(int value);
    partial void OnMALOPChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    #endregion
		
		public CTLOPHOC()
		{
			this._LOPHOC = default(EntityRef<LOPHOC>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_CTLOPHOC", Storage="_LOPHOC", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.CTLOPHOCs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.CTLOPHOCs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(int);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTLOPHOC", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CTLOPHOCs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CTLOPHOCs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENTK;
		
		private string _MATKHAU;
		
		private string _NHOM;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnNHOMChanging(string value);
    partial void OnNHOMChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHOM", DbType="NVarChar(20)")]
		public string NHOM
		{
			get
			{
				return this._NHOM;
			}
			set
			{
				if ((this._NHOM != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNHOMChanging(value);
					this.SendPropertyChanging();
					this._NHOM = value;
					this.SendPropertyChanged("NHOM");
					this.OnNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="TENTK", OtherKey="TENTK")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_TAIKHOAN", Storage="_PHANQUYEN", ThisKey="NHOM", OtherKey="NHOM", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._NHOM = value.NHOM;
					}
					else
					{
						this._NHOM = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTNHANVIEN")]
	public partial class CTNHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSNV;
		
		private int _MALOP;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSNVChanging(int value);
    partial void OnMSNVChanged();
    partial void OnMALOPChanging(int value);
    partial void OnMALOPChanged();
    #endregion
		
		public CTNHANVIEN()
		{
			this._LOPHOC = default(EntityRef<LOPHOC>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_CTNHANVIEN", Storage="_LOPHOC", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.CTNHANVIENs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.CTNHANVIENs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(int);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CTNHANVIEN", Storage="_NHANVIEN", ThisKey="MSNV", OtherKey="MSNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CTNHANVIENs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CTNHANVIENs.Add(this);
						this._MSNV = value.MSNV;
					}
					else
					{
						this._MSNV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHONG")]
	public partial class CTPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private int _THU;
		
		private int _BUOI;
		
		private string _TIET;
		
		private EntityRef<LICH> _LICH;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTHUChanging(int value);
    partial void OnTHUChanged();
    partial void OnBUOIChanging(int value);
    partial void OnBUOIChanged();
    partial void OnTIETChanging(string value);
    partial void OnTIETChanged();
    #endregion
		
		public CTPHONG()
		{
			this._LICH = default(EntityRef<LICH>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int THU
		{
			get
			{
				return this._THU;
			}
			set
			{
				if ((this._THU != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTHUChanging(value);
					this.SendPropertyChanging();
					this._THU = value;
					this.SendPropertyChanged("THU");
					this.OnTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BUOI
		{
			get
			{
				return this._BUOI;
			}
			set
			{
				if ((this._BUOI != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBUOIChanging(value);
					this.SendPropertyChanging();
					this._BUOI = value;
					this.SendPropertyChanged("BUOI");
					this.OnBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIET", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TIET
		{
			get
			{
				return this._TIET;
			}
			set
			{
				if ((this._TIET != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIETChanging(value);
					this.SendPropertyChanging();
					this._TIET = value;
					this.SendPropertyChanged("TIET");
					this.OnTIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICH_CTPHONG", Storage="_LICH", ThisKey="THU,BUOI,TIET", OtherKey="THU,BUOI,TIET", IsForeignKey=true)]
		public LICH LICH
		{
			get
			{
				return this._LICH.Entity;
			}
			set
			{
				LICH previousValue = this._LICH.Entity;
				if (((previousValue != value) 
							|| (this._LICH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LICH.Entity = null;
						previousValue.CTPHONGs.Remove(this);
					}
					this._LICH.Entity = value;
					if ((value != null))
					{
						value.CTPHONGs.Add(this);
						this._THU = value.THU;
						this._BUOI = value.BUOI;
						this._TIET = value.TIET;
					}
					else
					{
						this._THU = default(int);
						this._BUOI = default(int);
						this._TIET = default(string);
					}
					this.SendPropertyChanged("LICH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTPHONG", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CTPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CTPHONGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOADON")]
	public partial class CTHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private int _MALOAILOP;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<LOAILOP> _LOAILOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMALOAILOPChanging(int value);
    partial void OnMALOAILOPChanged();
    #endregion
		
		public CTHOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._LOAILOP = default(EntityRef<LOAILOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAILOP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAILOP
		{
			get
			{
				return this._MALOAILOP;
			}
			set
			{
				if ((this._MALOAILOP != value))
				{
					if (this._LOAILOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAILOPChanging(value);
					this.SendPropertyChanging();
					this._MALOAILOP = value;
					this.SendPropertyChanged("MALOAILOP");
					this.OnMALOAILOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADON", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAILOP_CTHOADON", Storage="_LOAILOP", ThisKey="MALOAILOP", OtherKey="MALOAILOP", IsForeignKey=true)]
		public LOAILOP LOAILOP
		{
			get
			{
				return this._LOAILOP.Entity;
			}
			set
			{
				LOAILOP previousValue = this._LOAILOP.Entity;
				if (((previousValue != value) 
							|| (this._LOAILOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAILOP.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._LOAILOP.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MALOAILOP = value.MALOAILOP;
					}
					else
					{
						this._MALOAILOP = default(int);
					}
					this.SendPropertyChanged("LOAILOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOCVIEN")]
	public partial class CTHOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHV;
		
		private int _MALOP;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHVChanging(int value);
    partial void OnMAHVChanged();
    partial void OnMALOPChanging(int value);
    partial void OnMALOPChanged();
    #endregion
		
		public CTHOCVIEN()
		{
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._LOPHOC = default(EntityRef<LOPHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHV
		{
			get
			{
				return this._MAHV;
			}
			set
			{
				if ((this._MAHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHVChanging(value);
					this.SendPropertyChanging();
					this._MAHV = value;
					this.SendPropertyChanged("MAHV");
					this.OnMAHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_CTHOCVIEN", Storage="_HOCVIEN", ThisKey="MAHV", OtherKey="MAHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.CTHOCVIENs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.CTHOCVIENs.Add(this);
						this._MAHV = value.MAHV;
					}
					else
					{
						this._MAHV = default(int);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_CTHOCVIEN", Storage="_LOPHOC", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.CTHOCVIENs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.CTHOCVIENs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(int);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHAMCONG")]
	public partial class CHAMCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSNV;
		
		private int _THU;
		
		private int _BUOI;
		
		private string _TIET;
		
		private EntityRef<LICH> _LICH;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSNVChanging(int value);
    partial void OnMSNVChanged();
    partial void OnTHUChanging(int value);
    partial void OnTHUChanged();
    partial void OnBUOIChanging(int value);
    partial void OnBUOIChanged();
    partial void OnTIETChanging(string value);
    partial void OnTIETChanged();
    #endregion
		
		public CHAMCONG()
		{
			this._LICH = default(EntityRef<LICH>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int THU
		{
			get
			{
				return this._THU;
			}
			set
			{
				if ((this._THU != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTHUChanging(value);
					this.SendPropertyChanging();
					this._THU = value;
					this.SendPropertyChanged("THU");
					this.OnTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BUOI
		{
			get
			{
				return this._BUOI;
			}
			set
			{
				if ((this._BUOI != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBUOIChanging(value);
					this.SendPropertyChanging();
					this._BUOI = value;
					this.SendPropertyChanged("BUOI");
					this.OnBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIET", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TIET
		{
			get
			{
				return this._TIET;
			}
			set
			{
				if ((this._TIET != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIETChanging(value);
					this.SendPropertyChanging();
					this._TIET = value;
					this.SendPropertyChanged("TIET");
					this.OnTIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICH_CHAMCONG", Storage="_LICH", ThisKey="THU,BUOI,TIET", OtherKey="THU,BUOI,TIET", IsForeignKey=true)]
		public LICH LICH
		{
			get
			{
				return this._LICH.Entity;
			}
			set
			{
				LICH previousValue = this._LICH.Entity;
				if (((previousValue != value) 
							|| (this._LICH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LICH.Entity = null;
						previousValue.CHAMCONGs.Remove(this);
					}
					this._LICH.Entity = value;
					if ((value != null))
					{
						value.CHAMCONGs.Add(this);
						this._THU = value.THU;
						this._BUOI = value.BUOI;
						this._TIET = value.TIET;
					}
					else
					{
						this._THU = default(int);
						this._BUOI = default(int);
						this._TIET = default(string);
					}
					this.SendPropertyChanged("LICH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHAMCONG", Storage="_NHANVIEN", ThisKey="MSNV", OtherKey="MSNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHAMCONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHAMCONGs.Add(this);
						this._MSNV = value.MSNV;
					}
					else
					{
						this._MSNV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MACV;
		
		private string _TENCV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACVChanging(int value);
    partial void OnMACVChanged();
    partial void OnTENCVChanging(string value);
    partial void OnTENCVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCV", DbType="NVarChar(50)")]
		public string TENCV
		{
			get
			{
				return this._TENCV;
			}
			set
			{
				if ((this._TENCV != value))
				{
					this.OnTENCVChanging(value);
					this.SendPropertyChanging();
					this._TENCV = value;
					this.SendPropertyChanged("TENCV");
					this.OnTENCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MACV", OtherKey="CHUCVU")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU1 = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIACHI")]
	public partial class DIACHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TINH_THANHPHO;
		
		private string _QUAN_HUYEN;
		
		private string _PHUONG_XA;
		
		private string _DUONG;
		
		private EntitySet<HOCVIEN> _HOCVIENs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTINH_THANHPHOChanging(string value);
    partial void OnTINH_THANHPHOChanged();
    partial void OnQUAN_HUYENChanging(string value);
    partial void OnQUAN_HUYENChanged();
    partial void OnPHUONG_XAChanging(string value);
    partial void OnPHUONG_XAChanged();
    partial void OnDUONGChanging(string value);
    partial void OnDUONGChanged();
    #endregion
		
		public DIACHI()
		{
			this._HOCVIENs = new EntitySet<HOCVIEN>(new Action<HOCVIEN>(this.attach_HOCVIENs), new Action<HOCVIEN>(this.detach_HOCVIENs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINH_THANHPHO", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TINH_THANHPHO
		{
			get
			{
				return this._TINH_THANHPHO;
			}
			set
			{
				if ((this._TINH_THANHPHO != value))
				{
					this.OnTINH_THANHPHOChanging(value);
					this.SendPropertyChanging();
					this._TINH_THANHPHO = value;
					this.SendPropertyChanged("TINH_THANHPHO");
					this.OnTINH_THANHPHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN_HUYEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QUAN_HUYEN
		{
			get
			{
				return this._QUAN_HUYEN;
			}
			set
			{
				if ((this._QUAN_HUYEN != value))
				{
					this.OnQUAN_HUYENChanging(value);
					this.SendPropertyChanging();
					this._QUAN_HUYEN = value;
					this.SendPropertyChanged("QUAN_HUYEN");
					this.OnQUAN_HUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG_XA", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PHUONG_XA
		{
			get
			{
				return this._PHUONG_XA;
			}
			set
			{
				if ((this._PHUONG_XA != value))
				{
					this.OnPHUONG_XAChanging(value);
					this.SendPropertyChanging();
					this._PHUONG_XA = value;
					this.SendPropertyChanged("PHUONG_XA");
					this.OnPHUONG_XAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONG", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DUONG
		{
			get
			{
				return this._DUONG;
			}
			set
			{
				if ((this._DUONG != value))
				{
					this.OnDUONGChanging(value);
					this.SendPropertyChanging();
					this._DUONG = value;
					this.SendPropertyChanged("DUONG");
					this.OnDUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIACHI_HOCVIEN", Storage="_HOCVIENs", ThisKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG", OtherKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG")]
		public EntitySet<HOCVIEN> HOCVIENs
		{
			get
			{
				return this._HOCVIENs;
			}
			set
			{
				this._HOCVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIACHI_NHANVIEN", Storage="_NHANVIENs", ThisKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG", OtherKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCVIENs(HOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DIACHI = this;
		}
		
		private void detach_HOCVIENs(HOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DIACHI = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DIACHI = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DIACHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEM")]
	public partial class DIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private double _DIEMSO;
		
		private int _MAHV;
		
		private int _MALOP;
		
		private int _LANTHI;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDIEMSOChanging(double value);
    partial void OnDIEMSOChanged();
    partial void OnMAHVChanging(int value);
    partial void OnMAHVChanged();
    partial void OnMALOPChanging(int value);
    partial void OnMALOPChanged();
    partial void OnLANTHIChanging(int value);
    partial void OnLANTHIChanged();
    #endregion
		
		public DIEM()
		{
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._LOPHOC = default(EntityRef<LOPHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMSO", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double DIEMSO
		{
			get
			{
				return this._DIEMSO;
			}
			set
			{
				if ((this._DIEMSO != value))
				{
					this.OnDIEMSOChanging(value);
					this.SendPropertyChanging();
					this._DIEMSO = value;
					this.SendPropertyChanged("DIEMSO");
					this.OnDIEMSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHV
		{
			get
			{
				return this._MAHV;
			}
			set
			{
				if ((this._MAHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHVChanging(value);
					this.SendPropertyChanging();
					this._MAHV = value;
					this.SendPropertyChanged("MAHV");
					this.OnMAHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANTHI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LANTHI
		{
			get
			{
				return this._LANTHI;
			}
			set
			{
				if ((this._LANTHI != value))
				{
					this.OnLANTHIChanging(value);
					this.SendPropertyChanging();
					this._LANTHI = value;
					this.SendPropertyChanged("LANTHI");
					this.OnLANTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DIEM", Storage="_HOCVIEN", ThisKey="MAHV", OtherKey="MAHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MAHV = value.MAHV;
					}
					else
					{
						this._MAHV = default(int);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_DIEM", Storage="_LOPHOC", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(int);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private int _MAHV;
		
		private int _MSNV;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMAHVChanging(int value);
    partial void OnMAHVChanged();
    partial void OnMSNVChanging(int value);
    partial void OnMSNVChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHV", DbType="Int NOT NULL")]
		public int MAHV
		{
			get
			{
				return this._MAHV;
			}
			set
			{
				if ((this._MAHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHVChanging(value);
					this.SendPropertyChanging();
					this._MAHV = value;
					this.SendPropertyChanged("MAHV");
					this.OnMAHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", DbType="Int NOT NULL")]
		public int MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADON", Storage="_CTHOADONs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_HOADON", Storage="_HOCVIEN", ThisKey="MAHV", OtherKey="MAHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAHV = value.MAHV;
					}
					else
					{
						this._MAHV = default(int);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MSNV", OtherKey="MSNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MSNV = value.MSNV;
					}
					else
					{
						this._MSNV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCVIEN")]
	public partial class HOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHV;
		
		private string _TENHV;
		
		private string _SDT;
		
		private string _EMAIL;
		
		private string _TINH_THANHPHO;
		
		private string _QUAN_HUYEN;
		
		private string _PHUONG_XA;
		
		private string _DUONG;
		
		private string _HINHANH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private EntitySet<CTHOCVIEN> _CTHOCVIENs;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<DIACHI> _DIACHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHVChanging(int value);
    partial void OnMAHVChanged();
    partial void OnTENHVChanging(string value);
    partial void OnTENHVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnTINH_THANHPHOChanging(string value);
    partial void OnTINH_THANHPHOChanged();
    partial void OnQUAN_HUYENChanging(string value);
    partial void OnQUAN_HUYENChanged();
    partial void OnPHUONG_XAChanging(string value);
    partial void OnPHUONG_XAChanged();
    partial void OnDUONGChanging(string value);
    partial void OnDUONGChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    #endregion
		
		public HOCVIEN()
		{
			this._CTHOCVIENs = new EntitySet<CTHOCVIEN>(new Action<CTHOCVIEN>(this.attach_CTHOCVIENs), new Action<CTHOCVIEN>(this.detach_CTHOCVIENs));
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._DIACHI = default(EntityRef<DIACHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHV
		{
			get
			{
				return this._MAHV;
			}
			set
			{
				if ((this._MAHV != value))
				{
					this.OnMAHVChanging(value);
					this.SendPropertyChanging();
					this._MAHV = value;
					this.SendPropertyChanged("MAHV");
					this.OnMAHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHV", DbType="NVarChar(50)")]
		public string TENHV
		{
			get
			{
				return this._TENHV;
			}
			set
			{
				if ((this._TENHV != value))
				{
					this.OnTENHVChanging(value);
					this.SendPropertyChanging();
					this._TENHV = value;
					this.SendPropertyChanged("TENHV");
					this.OnTENHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINH_THANHPHO", DbType="NVarChar(100)")]
		public string TINH_THANHPHO
		{
			get
			{
				return this._TINH_THANHPHO;
			}
			set
			{
				if ((this._TINH_THANHPHO != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTINH_THANHPHOChanging(value);
					this.SendPropertyChanging();
					this._TINH_THANHPHO = value;
					this.SendPropertyChanged("TINH_THANHPHO");
					this.OnTINH_THANHPHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN_HUYEN", DbType="NVarChar(100)")]
		public string QUAN_HUYEN
		{
			get
			{
				return this._QUAN_HUYEN;
			}
			set
			{
				if ((this._QUAN_HUYEN != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQUAN_HUYENChanging(value);
					this.SendPropertyChanging();
					this._QUAN_HUYEN = value;
					this.SendPropertyChanged("QUAN_HUYEN");
					this.OnQUAN_HUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG_XA", DbType="NVarChar(100)")]
		public string PHUONG_XA
		{
			get
			{
				return this._PHUONG_XA;
			}
			set
			{
				if ((this._PHUONG_XA != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPHUONG_XAChanging(value);
					this.SendPropertyChanging();
					this._PHUONG_XA = value;
					this.SendPropertyChanged("PHUONG_XA");
					this.OnPHUONG_XAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONG", DbType="NVarChar(100)")]
		public string DUONG
		{
			get
			{
				return this._DUONG;
			}
			set
			{
				if ((this._DUONG != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDUONGChanging(value);
					this.SendPropertyChanging();
					this._DUONG = value;
					this.SendPropertyChanged("DUONG");
					this.OnDUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_CTHOCVIEN", Storage="_CTHOCVIENs", ThisKey="MAHV", OtherKey="MAHV")]
		public EntitySet<CTHOCVIEN> CTHOCVIENs
		{
			get
			{
				return this._CTHOCVIENs;
			}
			set
			{
				this._CTHOCVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DIEM", Storage="_DIEMs", ThisKey="MAHV", OtherKey="MAHV")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_HOADON", Storage="_HOADONs", ThisKey="MAHV", OtherKey="MAHV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIACHI_HOCVIEN", Storage="_DIACHI", ThisKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG", OtherKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG", IsForeignKey=true)]
		public DIACHI DIACHI
		{
			get
			{
				return this._DIACHI.Entity;
			}
			set
			{
				DIACHI previousValue = this._DIACHI.Entity;
				if (((previousValue != value) 
							|| (this._DIACHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIACHI.Entity = null;
						previousValue.HOCVIENs.Remove(this);
					}
					this._DIACHI.Entity = value;
					if ((value != null))
					{
						value.HOCVIENs.Add(this);
						this._TINH_THANHPHO = value.TINH_THANHPHO;
						this._QUAN_HUYEN = value.QUAN_HUYEN;
						this._PHUONG_XA = value.PHUONG_XA;
						this._DUONG = value.DUONG;
					}
					else
					{
						this._TINH_THANHPHO = default(string);
						this._QUAN_HUYEN = default(string);
						this._PHUONG_XA = default(string);
						this._DUONG = default(string);
					}
					this.SendPropertyChanged("DIACHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOCVIENs(CTHOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_CTHOCVIENs(CTHOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICH")]
	public partial class LICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _THU;
		
		private int _BUOI;
		
		private string _TIET;
		
		private EntitySet<CTPHONG> _CTPHONGs;
		
		private EntitySet<CHAMCONG> _CHAMCONGs;
		
		private EntitySet<LOPHOC> _LOPHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTHUChanging(int value);
    partial void OnTHUChanged();
    partial void OnBUOIChanging(int value);
    partial void OnBUOIChanged();
    partial void OnTIETChanging(string value);
    partial void OnTIETChanged();
    #endregion
		
		public LICH()
		{
			this._CTPHONGs = new EntitySet<CTPHONG>(new Action<CTPHONG>(this.attach_CTPHONGs), new Action<CTPHONG>(this.detach_CTPHONGs));
			this._CHAMCONGs = new EntitySet<CHAMCONG>(new Action<CHAMCONG>(this.attach_CHAMCONGs), new Action<CHAMCONG>(this.detach_CHAMCONGs));
			this._LOPHOCs = new EntitySet<LOPHOC>(new Action<LOPHOC>(this.attach_LOPHOCs), new Action<LOPHOC>(this.detach_LOPHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int THU
		{
			get
			{
				return this._THU;
			}
			set
			{
				if ((this._THU != value))
				{
					this.OnTHUChanging(value);
					this.SendPropertyChanging();
					this._THU = value;
					this.SendPropertyChanged("THU");
					this.OnTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BUOI
		{
			get
			{
				return this._BUOI;
			}
			set
			{
				if ((this._BUOI != value))
				{
					this.OnBUOIChanging(value);
					this.SendPropertyChanging();
					this._BUOI = value;
					this.SendPropertyChanged("BUOI");
					this.OnBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIET", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TIET
		{
			get
			{
				return this._TIET;
			}
			set
			{
				if ((this._TIET != value))
				{
					this.OnTIETChanging(value);
					this.SendPropertyChanging();
					this._TIET = value;
					this.SendPropertyChanged("TIET");
					this.OnTIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICH_CTPHONG", Storage="_CTPHONGs", ThisKey="THU,BUOI,TIET", OtherKey="THU,BUOI,TIET")]
		public EntitySet<CTPHONG> CTPHONGs
		{
			get
			{
				return this._CTPHONGs;
			}
			set
			{
				this._CTPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICH_CHAMCONG", Storage="_CHAMCONGs", ThisKey="THU,BUOI,TIET", OtherKey="THU,BUOI,TIET")]
		public EntitySet<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this._CHAMCONGs;
			}
			set
			{
				this._CHAMCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICH_LOPHOC", Storage="_LOPHOCs", ThisKey="THU,BUOI,TIET", OtherKey="THU,BUOI,TIET")]
		public EntitySet<LOPHOC> LOPHOCs
		{
			get
			{
				return this._LOPHOCs;
			}
			set
			{
				this._LOPHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHONGs(CTPHONG entity)
		{
			this.SendPropertyChanging();
			entity.LICH = this;
		}
		
		private void detach_CTPHONGs(CTPHONG entity)
		{
			this.SendPropertyChanging();
			entity.LICH = null;
		}
		
		private void attach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.LICH = this;
		}
		
		private void detach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.LICH = null;
		}
		
		private void attach_LOPHOCs(LOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.LICH = this;
		}
		
		private void detach_LOPHOCs(LOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.LICH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAILOP")]
	public partial class LOAILOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAILOP;
		
		private string _TENLOP;
		
		private System.Nullable<double> _LOTRINH;
		
		private System.Nullable<double> _HOCPHI;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
		private EntitySet<LOPHOC> _LOPHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAILOPChanging(int value);
    partial void OnMALOAILOPChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnLOTRINHChanging(System.Nullable<double> value);
    partial void OnLOTRINHChanged();
    partial void OnHOCPHIChanging(System.Nullable<double> value);
    partial void OnHOCPHIChanged();
    #endregion
		
		public LOAILOP()
		{
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			this._LOPHOCs = new EntitySet<LOPHOC>(new Action<LOPHOC>(this.attach_LOPHOCs), new Action<LOPHOC>(this.detach_LOPHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAILOP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAILOP
		{
			get
			{
				return this._MALOAILOP;
			}
			set
			{
				if ((this._MALOAILOP != value))
				{
					this.OnMALOAILOPChanging(value);
					this.SendPropertyChanging();
					this._MALOAILOP = value;
					this.SendPropertyChanged("MALOAILOP");
					this.OnMALOAILOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="NVarChar(100)")]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOTRINH", DbType="Float")]
		public System.Nullable<double> LOTRINH
		{
			get
			{
				return this._LOTRINH;
			}
			set
			{
				if ((this._LOTRINH != value))
				{
					this.OnLOTRINHChanging(value);
					this.SendPropertyChanging();
					this._LOTRINH = value;
					this.SendPropertyChanged("LOTRINH");
					this.OnLOTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCPHI", DbType="Float")]
		public System.Nullable<double> HOCPHI
		{
			get
			{
				return this._HOCPHI;
			}
			set
			{
				if ((this._HOCPHI != value))
				{
					this.OnHOCPHIChanging(value);
					this.SendPropertyChanging();
					this._HOCPHI = value;
					this.SendPropertyChanged("HOCPHI");
					this.OnHOCPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAILOP_CTHOADON", Storage="_CTHOADONs", ThisKey="MALOAILOP", OtherKey="MALOAILOP")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAILOP_LOPHOC", Storage="_LOPHOCs", ThisKey="MALOAILOP", OtherKey="MALOAILOP")]
		public EntitySet<LOPHOC> LOPHOCs
		{
			get
			{
				return this._LOPHOCs;
			}
			set
			{
				this._LOPHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.LOAILOP = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.LOAILOP = null;
		}
		
		private void attach_LOPHOCs(LOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.LOAILOP = this;
		}
		
		private void detach_LOPHOCs(LOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.LOAILOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPHOC")]
	public partial class LOPHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOP;
		
		private System.Nullable<int> _MALOAILOP;
		
		private int _THU;
		
		private int _BUOI;
		
		private string _TIET;
		
		private System.Nullable<int> _SOLUONGDANGKY_TOIDA;
		
		private System.Nullable<int> _SOLUONGDADANGKY;
		
		private EntitySet<CTLOPHOC> _CTLOPHOCs;
		
		private EntitySet<CTNHANVIEN> _CTNHANVIENs;
		
		private EntitySet<CTHOCVIEN> _CTHOCVIENs;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntityRef<LICH> _LICH;
		
		private EntityRef<LOAILOP> _LOAILOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPChanging(int value);
    partial void OnMALOPChanged();
    partial void OnMALOAILOPChanging(System.Nullable<int> value);
    partial void OnMALOAILOPChanged();
    partial void OnTHUChanging(int value);
    partial void OnTHUChanged();
    partial void OnBUOIChanging(int value);
    partial void OnBUOIChanged();
    partial void OnTIETChanging(string value);
    partial void OnTIETChanged();
    partial void OnSOLUONGDANGKY_TOIDAChanging(System.Nullable<int> value);
    partial void OnSOLUONGDANGKY_TOIDAChanged();
    partial void OnSOLUONGDADANGKYChanging(System.Nullable<int> value);
    partial void OnSOLUONGDADANGKYChanged();
    #endregion
		
		public LOPHOC()
		{
			this._CTLOPHOCs = new EntitySet<CTLOPHOC>(new Action<CTLOPHOC>(this.attach_CTLOPHOCs), new Action<CTLOPHOC>(this.detach_CTLOPHOCs));
			this._CTNHANVIENs = new EntitySet<CTNHANVIEN>(new Action<CTNHANVIEN>(this.attach_CTNHANVIENs), new Action<CTNHANVIEN>(this.detach_CTNHANVIENs));
			this._CTHOCVIENs = new EntitySet<CTHOCVIEN>(new Action<CTHOCVIEN>(this.attach_CTHOCVIENs), new Action<CTHOCVIEN>(this.detach_CTHOCVIENs));
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._LICH = default(EntityRef<LICH>);
			this._LOAILOP = default(EntityRef<LOAILOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAILOP", DbType="Int")]
		public System.Nullable<int> MALOAILOP
		{
			get
			{
				return this._MALOAILOP;
			}
			set
			{
				if ((this._MALOAILOP != value))
				{
					if (this._LOAILOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAILOPChanging(value);
					this.SendPropertyChanging();
					this._MALOAILOP = value;
					this.SendPropertyChanged("MALOAILOP");
					this.OnMALOAILOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU", DbType="Int NOT NULL")]
		public int THU
		{
			get
			{
				return this._THU;
			}
			set
			{
				if ((this._THU != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTHUChanging(value);
					this.SendPropertyChanging();
					this._THU = value;
					this.SendPropertyChanged("THU");
					this.OnTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOI", DbType="Int NOT NULL")]
		public int BUOI
		{
			get
			{
				return this._BUOI;
			}
			set
			{
				if ((this._BUOI != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBUOIChanging(value);
					this.SendPropertyChanging();
					this._BUOI = value;
					this.SendPropertyChanged("BUOI");
					this.OnBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIET", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TIET
		{
			get
			{
				return this._TIET;
			}
			set
			{
				if ((this._TIET != value))
				{
					if (this._LICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIETChanging(value);
					this.SendPropertyChanging();
					this._TIET = value;
					this.SendPropertyChanged("TIET");
					this.OnTIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGDANGKY_TOIDA", DbType="Int")]
		public System.Nullable<int> SOLUONGDANGKY_TOIDA
		{
			get
			{
				return this._SOLUONGDANGKY_TOIDA;
			}
			set
			{
				if ((this._SOLUONGDANGKY_TOIDA != value))
				{
					this.OnSOLUONGDANGKY_TOIDAChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGDANGKY_TOIDA = value;
					this.SendPropertyChanged("SOLUONGDANGKY_TOIDA");
					this.OnSOLUONGDANGKY_TOIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGDADANGKY", DbType="Int")]
		public System.Nullable<int> SOLUONGDADANGKY
		{
			get
			{
				return this._SOLUONGDADANGKY;
			}
			set
			{
				if ((this._SOLUONGDADANGKY != value))
				{
					this.OnSOLUONGDADANGKYChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGDADANGKY = value;
					this.SendPropertyChanged("SOLUONGDADANGKY");
					this.OnSOLUONGDADANGKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_CTLOPHOC", Storage="_CTLOPHOCs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<CTLOPHOC> CTLOPHOCs
		{
			get
			{
				return this._CTLOPHOCs;
			}
			set
			{
				this._CTLOPHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_CTNHANVIEN", Storage="_CTNHANVIENs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<CTNHANVIEN> CTNHANVIENs
		{
			get
			{
				return this._CTNHANVIENs;
			}
			set
			{
				this._CTNHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_CTHOCVIEN", Storage="_CTHOCVIENs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<CTHOCVIEN> CTHOCVIENs
		{
			get
			{
				return this._CTHOCVIENs;
			}
			set
			{
				this._CTHOCVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_DIEM", Storage="_DIEMs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICH_LOPHOC", Storage="_LICH", ThisKey="THU,BUOI,TIET", OtherKey="THU,BUOI,TIET", IsForeignKey=true)]
		public LICH LICH
		{
			get
			{
				return this._LICH.Entity;
			}
			set
			{
				LICH previousValue = this._LICH.Entity;
				if (((previousValue != value) 
							|| (this._LICH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LICH.Entity = null;
						previousValue.LOPHOCs.Remove(this);
					}
					this._LICH.Entity = value;
					if ((value != null))
					{
						value.LOPHOCs.Add(this);
						this._THU = value.THU;
						this._BUOI = value.BUOI;
						this._TIET = value.TIET;
					}
					else
					{
						this._THU = default(int);
						this._BUOI = default(int);
						this._TIET = default(string);
					}
					this.SendPropertyChanged("LICH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAILOP_LOPHOC", Storage="_LOAILOP", ThisKey="MALOAILOP", OtherKey="MALOAILOP", IsForeignKey=true)]
		public LOAILOP LOAILOP
		{
			get
			{
				return this._LOAILOP.Entity;
			}
			set
			{
				LOAILOP previousValue = this._LOAILOP.Entity;
				if (((previousValue != value) 
							|| (this._LOAILOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAILOP.Entity = null;
						previousValue.LOPHOCs.Remove(this);
					}
					this._LOAILOP.Entity = value;
					if ((value != null))
					{
						value.LOPHOCs.Add(this);
						this._MALOAILOP = value.MALOAILOP;
					}
					else
					{
						this._MALOAILOP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAILOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTLOPHOCs(CTLOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_CTLOPHOCs(CTLOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
		
		private void attach_CTNHANVIENs(CTNHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_CTNHANVIENs(CTNHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
		
		private void attach_CTHOCVIENs(CTHOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_CTHOCVIENs(CTHOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MSNV;
		
		private string _TENNV;
		
		private System.Nullable<double> _LUONGCUNG;
		
		private System.Nullable<double> _HSL;
		
		private System.Nullable<int> _TRINHDO;
		
		private string _HINHANH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private System.Nullable<int> _KINHNGHIEM;
		
		private string _TINH_THANHPHO;
		
		private string _QUAN_HUYEN;
		
		private string _PHUONG_XA;
		
		private string _DUONG;
		
		private System.Nullable<int> _CHUCVU;
		
		private string _TENTK;
		
		private EntitySet<CTNHANVIEN> _CTNHANVIENs;
		
		private EntitySet<CHAMCONG> _CHAMCONGs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<CHUCVU> _CHUCVU1;
		
		private EntityRef<DIACHI> _DIACHI;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSNVChanging(int value);
    partial void OnMSNVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnLUONGCUNGChanging(System.Nullable<double> value);
    partial void OnLUONGCUNGChanged();
    partial void OnHSLChanging(System.Nullable<double> value);
    partial void OnHSLChanged();
    partial void OnTRINHDOChanging(System.Nullable<int> value);
    partial void OnTRINHDOChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnKINHNGHIEMChanging(System.Nullable<int> value);
    partial void OnKINHNGHIEMChanged();
    partial void OnTINH_THANHPHOChanging(string value);
    partial void OnTINH_THANHPHOChanged();
    partial void OnQUAN_HUYENChanging(string value);
    partial void OnQUAN_HUYENChanged();
    partial void OnPHUONG_XAChanging(string value);
    partial void OnPHUONG_XAChanged();
    partial void OnDUONGChanging(string value);
    partial void OnDUONGChanged();
    partial void OnCHUCVUChanging(System.Nullable<int> value);
    partial void OnCHUCVUChanged();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CTNHANVIENs = new EntitySet<CTNHANVIEN>(new Action<CTNHANVIEN>(this.attach_CTNHANVIENs), new Action<CTNHANVIEN>(this.detach_CTNHANVIENs));
			this._CHAMCONGs = new EntitySet<CHAMCONG>(new Action<CHAMCONG>(this.attach_CHAMCONGs), new Action<CHAMCONG>(this.detach_CHAMCONGs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._CHUCVU1 = default(EntityRef<CHUCVU>);
			this._DIACHI = default(EntityRef<DIACHI>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MSNV
		{
			get
			{
				return this._MSNV;
			}
			set
			{
				if ((this._MSNV != value))
				{
					this.OnMSNVChanging(value);
					this.SendPropertyChanging();
					this._MSNV = value;
					this.SendPropertyChanged("MSNV");
					this.OnMSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(50)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONGCUNG", DbType="Float")]
		public System.Nullable<double> LUONGCUNG
		{
			get
			{
				return this._LUONGCUNG;
			}
			set
			{
				if ((this._LUONGCUNG != value))
				{
					this.OnLUONGCUNGChanging(value);
					this.SendPropertyChanging();
					this._LUONGCUNG = value;
					this.SendPropertyChanged("LUONGCUNG");
					this.OnLUONGCUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSL", DbType="Float")]
		public System.Nullable<double> HSL
		{
			get
			{
				return this._HSL;
			}
			set
			{
				if ((this._HSL != value))
				{
					this.OnHSLChanging(value);
					this.SendPropertyChanging();
					this._HSL = value;
					this.SendPropertyChanged("HSL");
					this.OnHSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRINHDO", DbType="Int")]
		public System.Nullable<int> TRINHDO
		{
			get
			{
				return this._TRINHDO;
			}
			set
			{
				if ((this._TRINHDO != value))
				{
					this.OnTRINHDOChanging(value);
					this.SendPropertyChanging();
					this._TRINHDO = value;
					this.SendPropertyChanged("TRINHDO");
					this.OnTRINHDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KINHNGHIEM", DbType="Int")]
		public System.Nullable<int> KINHNGHIEM
		{
			get
			{
				return this._KINHNGHIEM;
			}
			set
			{
				if ((this._KINHNGHIEM != value))
				{
					this.OnKINHNGHIEMChanging(value);
					this.SendPropertyChanging();
					this._KINHNGHIEM = value;
					this.SendPropertyChanged("KINHNGHIEM");
					this.OnKINHNGHIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINH_THANHPHO", DbType="NVarChar(100)")]
		public string TINH_THANHPHO
		{
			get
			{
				return this._TINH_THANHPHO;
			}
			set
			{
				if ((this._TINH_THANHPHO != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTINH_THANHPHOChanging(value);
					this.SendPropertyChanging();
					this._TINH_THANHPHO = value;
					this.SendPropertyChanged("TINH_THANHPHO");
					this.OnTINH_THANHPHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN_HUYEN", DbType="NVarChar(100)")]
		public string QUAN_HUYEN
		{
			get
			{
				return this._QUAN_HUYEN;
			}
			set
			{
				if ((this._QUAN_HUYEN != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQUAN_HUYENChanging(value);
					this.SendPropertyChanging();
					this._QUAN_HUYEN = value;
					this.SendPropertyChanged("QUAN_HUYEN");
					this.OnQUAN_HUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG_XA", DbType="NVarChar(100)")]
		public string PHUONG_XA
		{
			get
			{
				return this._PHUONG_XA;
			}
			set
			{
				if ((this._PHUONG_XA != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPHUONG_XAChanging(value);
					this.SendPropertyChanging();
					this._PHUONG_XA = value;
					this.SendPropertyChanged("PHUONG_XA");
					this.OnPHUONG_XAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONG", DbType="NVarChar(100)")]
		public string DUONG
		{
			get
			{
				return this._DUONG;
			}
			set
			{
				if ((this._DUONG != value))
				{
					if (this._DIACHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDUONGChanging(value);
					this.SendPropertyChanging();
					this._DUONG = value;
					this.SendPropertyChanged("DUONG");
					this.OnDUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="Int")]
		public System.Nullable<int> CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					if (this._CHUCVU1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="VarChar(20)")]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CTNHANVIEN", Storage="_CTNHANVIENs", ThisKey="MSNV", OtherKey="MSNV")]
		public EntitySet<CTNHANVIEN> CTNHANVIENs
		{
			get
			{
				return this._CTNHANVIENs;
			}
			set
			{
				this._CTNHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHAMCONG", Storage="_CHAMCONGs", ThisKey="MSNV", OtherKey="MSNV")]
		public EntitySet<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this._CHAMCONGs;
			}
			set
			{
				this._CHAMCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MSNV", OtherKey="MSNV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU1", ThisKey="CHUCVU", OtherKey="MACV", IsForeignKey=true)]
		public CHUCVU CHUCVU1
		{
			get
			{
				return this._CHUCVU1.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU1.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU1.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU1.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._CHUCVU = value.MACV;
					}
					else
					{
						this._CHUCVU = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUCVU1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIACHI_NHANVIEN", Storage="_DIACHI", ThisKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG", OtherKey="TINH_THANHPHO,QUAN_HUYEN,PHUONG_XA,DUONG", IsForeignKey=true)]
		public DIACHI DIACHI
		{
			get
			{
				return this._DIACHI.Entity;
			}
			set
			{
				DIACHI previousValue = this._DIACHI.Entity;
				if (((previousValue != value) 
							|| (this._DIACHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIACHI.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._DIACHI.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._TINH_THANHPHO = value.TINH_THANHPHO;
						this._QUAN_HUYEN = value.QUAN_HUYEN;
						this._PHUONG_XA = value.PHUONG_XA;
						this._DUONG = value.DUONG;
					}
					else
					{
						this._TINH_THANHPHO = default(string);
						this._QUAN_HUYEN = default(string);
						this._PHUONG_XA = default(string);
						this._DUONG = default(string);
					}
					this.SendPropertyChanged("DIACHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="TENTK", OtherKey="TENTK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._TENTK = value.TENTK;
					}
					else
					{
						this._TENTK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTNHANVIENs(CTNHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CTNHANVIENs(CTNHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NHOM;
		
		private string _QUYEN;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNHOMChanging(string value);
    partial void OnNHOMChanged();
    partial void OnQUYENChanging(string value);
    partial void OnQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHOM", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NHOM
		{
			get
			{
				return this._NHOM;
			}
			set
			{
				if ((this._NHOM != value))
				{
					this.OnNHOMChanging(value);
					this.SendPropertyChanging();
					this._NHOM = value;
					this.SendPropertyChanged("NHOM");
					this.OnNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN", DbType="VarChar(30)")]
		public string QUYEN
		{
			get
			{
				return this._QUYEN;
			}
			set
			{
				if ((this._QUYEN != value))
				{
					this.OnQUYENChanging(value);
					this.SendPropertyChanging();
					this._QUYEN = value;
					this.SendPropertyChanged("QUYEN");
					this.OnQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="NHOM", OtherKey="NHOM")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private System.Nullable<int> _SOCHONGOI;
		
		private EntitySet<CTLOPHOC> _CTLOPHOCs;
		
		private EntitySet<CTPHONG> _CTPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnSOCHONGOIChanging(System.Nullable<int> value);
    partial void OnSOCHONGOIChanged();
    #endregion
		
		public PHONG()
		{
			this._CTLOPHOCs = new EntitySet<CTLOPHOC>(new Action<CTLOPHOC>(this.attach_CTLOPHOCs), new Action<CTLOPHOC>(this.detach_CTLOPHOCs));
			this._CTPHONGs = new EntitySet<CTPHONG>(new Action<CTPHONG>(this.attach_CTPHONGs), new Action<CTPHONG>(this.detach_CTPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCHONGOI", DbType="Int")]
		public System.Nullable<int> SOCHONGOI
		{
			get
			{
				return this._SOCHONGOI;
			}
			set
			{
				if ((this._SOCHONGOI != value))
				{
					this.OnSOCHONGOIChanging(value);
					this.SendPropertyChanging();
					this._SOCHONGOI = value;
					this.SendPropertyChanged("SOCHONGOI");
					this.OnSOCHONGOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTLOPHOC", Storage="_CTLOPHOCs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<CTLOPHOC> CTLOPHOCs
		{
			get
			{
				return this._CTLOPHOCs;
			}
			set
			{
				this._CTLOPHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CTPHONG", Storage="_CTPHONGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<CTPHONG> CTPHONGs
		{
			get
			{
				return this._CTPHONGs;
			}
			set
			{
				this._CTPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTLOPHOCs(CTLOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CTLOPHOCs(CTLOPHOC entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_CTPHONGs(CTPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CTPHONGs(CTPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
}
#pragma warning restore 1591
