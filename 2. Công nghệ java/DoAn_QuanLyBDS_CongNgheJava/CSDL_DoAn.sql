CREATE DATABASE DB_QLDA ON PRIMARY
(
	NAME=QLCSDL_DOAN,
	FILENAME='F:\QLCSDL_DOAN\FILE_CHINH.MDF',
	SIZE=10,
	MAXSIZE=1000,
	FILEGROWTH=10%
),
(
	NAME=QLCSDL_DOAN_P1,
	FILENAME='F:\QLCSDL_DOAN\FILE_PHU1.NDF',
	SIZE=2,
	MAXSIZE=200,
	FILEGROWTH=10%
)
LOG ON
(
	NAME=QLCSDL_DOAN_LOG,
	FILENAME='F:\QLCSDL_DOAN\FILE_LOG.LDF',
	SIZE=3,
	MAXSIZE=250,
	FILEGROWTH=10%
)

GO
USE DB_QLDA

USE master
DROP DATABASE DB_QLDA

GO
CREATE TABLE CHUDAUTU
(
	MACDT VARCHAR(30) NOT NULL,
	TENCDT NVARCHAR(50),
	NGAY_DKKD DATE,
	MASOTHUE VARCHAR(30) NOT NULL,
	MADUAN VARCHAR(30) NOT NULL,
	CONSTRAINT PK_MACDT_MASOTHUE_MADUAN PRIMARY KEY(MACDT, MASOTHUE,MADUAN)
)

GO
CREATE TABLE KHACHHANG
(
	MAKH VARCHAR(30) NOT NULL,
	HOTEN NVARCHAR(50),
	NGAYSINH DATE,
	GTINH NVARCHAR(10),
	NGAYMUA_THUE DATE,
	MADUAN VARCHAR(30) NOT NULL,
	CONSTRAINT PK_MAKH_MADUAN PRIMARY KEY(MAKH,MADUAN)
)


GO
CREATE TABLE THUE
(
	MASOTHUE VARCHAR(30) NOT NULL,
	TENTHUE NVARCHAR(50),
	LOAITHUE NVARCHAR(50),
	CONSTRAINT PK_MASOTHUE PRIMARY KEY(MASOTHUE)
)

GO
CREATE TABLE DUAN
(
	MADUAN VARCHAR(30) NOT NULL,
	TENDUAN NVARCHAR(50),
	DIACHI NVARCHAR(50),
	NAMBG INT,
	MAKD VARCHAR(30),
	CONSTRAINT PK_MADUAN PRIMARY KEY(MADUAN)
)

GO
ALTER TABLE DUAN
ADD SOLUONG_KH INT DEFAULT 0
GO
ALTER TABLE DUAN
ADD SOLUONG_CDT INT DEFAULT 0




GO
CREATE TABLE KHUDAT
(
	MAKD VARCHAR(30) NOT NULL,
	CHUSOHUU NVARCHAR(50),
	MADUAN VARCHAR(30),
	CONSTRAINT PK_MAKD PRIMARY KEY(MAKD)
)


------------ĐĂNG NHẬP/ĐĂNG KÝ-----PHÂN QUYỀN-----------
GO
CREATE TABLE TAIKHOAN
(
	TEN VARCHAR(30) NOT NULL,
	PASS VARCHAR(50),
	LOAI NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_FULL_TK PRIMARY KEY(TEN,LOAI)
)

GO
CREATE TABLE SAVE_DANGNHAP
(
	TEN VARCHAR(30) NOT NULL,
	PASS VARCHAR(50),
	LOAI NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_TEN_SAVE PRIMARY KEY(TEN,LOAI)
)

GO
ALTER TABLE SAVE_DANGNHAP
ADD CONSTRAINT FK_FULL_DN FOREIGN KEY(TEN,LOAI) REFERENCES TAIKHOAN(TEN,LOAI)




DROP TABLE SAVE_DANGNHAP
DROP TABLE TAIKHOAN




---------------------------------------------------------

---------------------BẢNG LƯU DANH SÁCH NHÓM----------DANH SÁCH CÁC TABLE MẶC ĐỊNH--------------
GO
CREATE TABLE DS_TABLE
(
	TEN_TABLE NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_TEN_TABLE PRIMARY KEY(TEN_TABLE)
)

GO
CREATE TABLE DS_NHOM
(
	TENNHOM NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_TENNHOM PRIMARY KEY(TENNHOM)
)

-- 5 NHÓM MẶC ĐỊNH
GO
INSERT INTO DS_NHOM
VALUES('Thong_thuong'),
		('Trung_cap'),
		('Vip'),
		('Super_Vip'),
		('Quan_tri')


-- 5 BẢNG MẶC ĐỊNH
INSERT INTO DS_TABLE
VALUES('CHUDAUTU'),
		('DUAN'),
		('KHACHHANG'),
		('KHUDAT'),
		('THUE')


---------------------------------------------------------

---------------------BẢNG LƯU DANH SÁCH QUYỀN ĐƯỢC THỰC THI TRÊN CÁC USER VÀ NHÓM QUYỀN--------------
GO
CREATE TABLE PHANQUYEN
(
	TEN NVARCHAR(50) NOT NULL,
	QUYEN VARCHAR(50) NOT NULL,
	BANG_CHON VARCHAR(50) NOT NULL,
	CONSTRAINT PK_FULL_KEY PRIMARY KEY(TEN,QUYEN,BANG_CHON)
)



---------------------------------------------------------



GO
ALTER TABLE CHUDAUTU
ADD CONSTRAINT FK_MASOTHUE_CDT FOREIGN KEY(MASOTHUE) REFERENCES THUE(MASOTHUE)

ALTER TABLE CHUDAUTU
ADD CONSTRAINT FK_MADUAN_CDT FOREIGN KEY(MADUAN) REFERENCES DUAN(MADUAN)

ALTER TABLE KHACHHANG
ADD CONSTRAINT FK_MADUAN_KH FOREIGN KEY(MADUAN) REFERENCES DUAN(MADUAN)

ALTER TABLE DUAN
ADD CONSTRAINT FK_MAKD_KHUDAT FOREIGN KEY(MAKD) REFERENCES KHUDAT(MAKD)

ALTER TABLE KHUDAT
ADD CONSTRAINT FK_MADUAN_KD FOREIGN KEY(MADUAN) REFERENCES DUAN(MADUAN)

-------------------------------------INSERT INTO--------------------------
GO
INSERT INTO THUE
VALUES('T001',N'THUẾ CÔNG CHỨNG TRƯỚC BẠ',N'BẮT BUỘC'),
	('T002',N'THUẾ GTGT',N'BẮT BUỘC'),
	('T003',N'THUẾ BVMT',N'KHÔNG BẮT BUỘC'),
	('T004',N'THUẾ TNCN',N'KHÔNG BẮT BUỘC'),
	('T005',N'THUẾ DKKD',N'BẮT BUỘC')

select * from THUE
delete from THUE


GO
INSERT INTO DUAN(MADUAN,TENDUAN,DIACHI,NAMBG)
VALUES('DA001','FELIZ EN VISTA','01 PHAN VĂN ĐÁNG',2020),
	('DA002','VISTA VERDE','02 PHAN VĂN ĐÁNG',2018),
	('DA003','ONE VERANDAH','BÁT NÀN - THẠNH MỸ LỢI',2020),
	('DA004','THE CBD','125 ĐỒNG VĂN CỐNG',2013),
	('DA005','LA ASTORIA','383 NGUYỄN DUY TRINH',2019),
	('DA006','PARCSPRING','543 NGUYỄN DUY TRINH',2016),
	('DA007','THE KRISTA','547 NGUYỄN DUY TRINH',2018)



GO
INSERT INTO KHUDAT
VALUES('KD001','NGUYỄN VĂN A','DA001'),
	('KD002','NGUYỄN VĂN A','DA002'),
	('KD003','NGUYỄN VĂN B','DA003'),
	('KD004','NGUYỄN VĂN B','DA004'),
	('KD005','NGUYỄN VĂN C','DA005')


GO
UPDATE DUAN
SET MAKD=(SELECT MAKD
		FROM KHUDAT
		WHERE MADUAN=DUAN.MADUAN)

GO
SET DATEFORMAT DMY
INSERT INTO CHUDAUTU
VALUES('CDT001','CAPITALAND','01/03/2001','T001','DA001'),
	('CDT002',N'KHANG ĐIỀN','04/09/1996','T001','DA002'),
	('CDT003',N'AN GIA HƯNG','08/12/2001','T002','DA003'),
	('CDT004',N'THỊNH VƯỢNG','09/07/2010','T003','DA004'),
	('CDT005',N'PHƯỚC THÀNH','10/05/1996','T002','DA005')


GO
SET DATEFORMAT DMY
INSERT INTO KHACHHANG
VALUES('KH001',N'LÊ A','01/03/2001',N'NAM','31/05/2020','DA001'),
	('KH002',N'LÊ B','08/01/2000',N'NỮ','20/04/2016','DA002'),
	('KH003',N'LÊ C','28/03/2001',N'NỮ','31/05/2020','DA001'),
	('KH004',N'LÊ R','20/11/1996',N'NAM','20/02/2015','DA004'),
	('KH005',N'LÊ G','05/09/1985',N'NỮ','16/07/2010','DA005'),
	('KH002',N'LÊ B','08/01/2000',N'NỮ','20/04/2016','DA003'),
	('KH001',N'LÊ A','01/03/2001',N'NAM','31/05/2020','DA002')


GO
UPDATE DUAN
SET SOLUONG_KH = (SELECT COUNT(MAKH) FROM KHACHHANG KH, DUAN DA WHERE KH.MADUAN=DA.MADUAN AND KH.MADUAN=DUAN.MADUAN)
GO
UPDATE DUAN
SET SOLUONG_CDT = (SELECT COUNT(MACDT) FROM CHUDAUTU CDT, DUAN DA WHERE CDT.MADUAN=DA.MADUAN AND DA.MADUAN=DUAN.MADUAN)




--------------------------------ĐỒ ÁN JAVA-------------------------------

---***LƯU Ý: KHI THỰC HIỆN PHẢI KẾT HỢP THÊM NHỮNG PHẦN SAU CỦA ĐỒ ÁN HQT CSDL (Mới chạy được):
--1. ĐỒ ÁN TUẦN SỐ 10 (Ý số 1 và 2)



-----Đếm số lượng khách hàng
GO
CREATE FUNCTION HAM_DEMSO_KH()
RETURNS INT
AS
BEGIN
	DECLARE @TAM INT=(SELECT COUNT(DISTINCT MAKH) FROM KHACHHANG)
	RETURN @TAM
END

DECLARE @SL INT=DBO.HAM_DEMSO_KH()
PRINT @SL


------Khách hàng giao dịch nhiều nhất
GO
SELECT * FROM KHACHHANG

GO
CREATE FUNCTION HAM_LAY_MAKH_GIAODICH_MAX()
RETURNS VARCHAR(50)
AS
BEGIN
	DECLARE @MAKH VARCHAR(50)=(SELECT TOP 1 MAKH FROM KHACHHANG GROUP BY(MAKH) ORDER BY COUNT(MAKH) DESC)
	RETURN @MAKH
END

DECLARE @MAKH VARCHAR(50)=DBO.HAM_LAY_MAKH_GIAODICH_MAX()
PRINT @MAKH


------Dự án được KH giao dịch nhiều nhất
GO
SELECT * FROM KHACHHANG
SELECT * FROM DUAN

GO
CREATE FUNCTION HAM_LAY_TENDA_GIAODICH_MAX()
RETURNS NVARCHAR(50)
AS
BEGIN
	DECLARE @TENDA NVARCHAR(50)=(SELECT TENDUAN FROM DUAN WHERE MADUAN=(SELECT TOP 1 MADUAN FROM KHACHHANG GROUP BY(MADUAN) ORDER BY COUNT(MADUAN) DESC))
	RETURN @TENDA
END

DECLARE @TENDA NVARCHAR(50)=DBO.HAM_LAY_TENDA_GIAODICH_MAX()
PRINT @TENDA


------Khi thêm xóa sửa trên bảng khách hàng thì cập nhật lại số lượng khách hàng trên table Dự án
GO
CREATE TRIGGER TRG_CAPNHAT_SLKH ON KHACHHANG
FOR INSERT,UPDATE, DELETE
AS
BEGIN
	BEGIN TRAN
			IF EXISTS(SELECT * FROM deleted) --TH: SỬA + XÓA
			BEGIN
				UPDATE DUAN
				SET SOLUONG_KH=SOLUONG_KH-1
				WHERE DUAN.MADUAN=(SELECT MADUAN FROM deleted)
			END
	
			IF EXISTS(SELECT * FROM inserted) --TH: SỬA + THÊM
			BEGIN
				UPDATE DUAN
				SET SOLUONG_KH=SOLUONG_KH + 1
				WHERE DUAN.MADUAN=(SELECT MADUAN FROM inserted)
			END

	COMMIT TRAN
END

DROP TRIGGER TRG_CAPNHAT_SLKH


------Khi thêm xóa sửa trên bảng Chủ đầu tư thì cập nhật lại số lượng chủ đầu tư trên table Dự án
GO
CREATE TRIGGER TRG_CAPNHAT_SLCDT ON CHUDAUTU
FOR INSERT,UPDATE, DELETE
AS
BEGIN
	BEGIN TRAN
			IF EXISTS(SELECT * FROM deleted) --TH: SỬA + XÓA
			BEGIN
				UPDATE DUAN
				SET SOLUONG_CDT=SOLUONG_CDT-1
				WHERE DUAN.MADUAN=(SELECT MADUAN FROM deleted)
			END
	
			IF EXISTS(SELECT * FROM inserted) --TH: SỬA + THÊM
			BEGIN
				UPDATE DUAN
				SET SOLUONG_CDT=SOLUONG_CDT + 1
				WHERE DUAN.MADUAN=(SELECT MADUAN FROM inserted)
			END

	COMMIT TRAN
END

DROP TRIGGER TRG_CAPNHAT_SLCDT










----------------------------------ĐỒ ÁN HỆ QUẢN TRỊ CSDL------------------------------------

--1. Chuyển lệnh nhập dữ liệu bằng file txt dưới dạng thủ tục
GO
DELETE FROM KHACHHANG
SELECT * FROM KHACHHANG
GO
alter PROC TT_NHAP
AS
BEGIN
	BULK INSERT  dbo.KHACHHANG
	FROM 'E:\FILE_KH_OUT.TXT'
	WITH
	(
		ROWTERMINATOR='\n',
		FIELDTERMINATOR='	'
	)
	IF EXISTS(SELECT * FROM KHACHHANG)
		PRINT 'NHAP DU LIEU VAO BANG KHACH HANG THANH CONG'
	ELSE
		PRINT 'NHAP DU LIEU VAO BANG KHACH HANG KHONG THANH CONG'

END

GO
EXEC TT_NHAP
SELECT * FROM KHACHHANG

DELETE FROM KHACHHANG
-------------------
go
alter function HAM_IN()
returns int
as
begin
	BULK INSERT KHACHHANG
	FROM 'E:\FILE_KH_OUT.TXT'
	WITH
	(
		ROWTERMINATOR='\n',
		FIELDTERMINATOR='	'
	)
	 return 1
end
DECLARE @KQ int
set @KQ=dbo.HAM_IN
if(@KQ=1)
	print'Nhap thanh cong'
	else
	print 'nhap khong thanh cong'
--2. Chuyển lệnh xuất dữ liệu bằng file txt dưới dạng thủ tục
GO
Alter PROC TT_XUAT
AS
BEGIN
	DECLARE @SQL VARCHAR(5000)
	SET @SQL='BCP "SELECT * FROM [ADMIN/SQLEXPRESS].[DB_QLDA].[DBO].[CHUDAUTU]" QUERYOUT "E:\CDT.TXT" -c -T -t; -S ADMIN/SQLEXPRESS -U sa -P 123'
	EXEC MASTER..XP_CMDSHELL @SQL
	RETURN 1
END

DROP PROC TT_XUAT
GO
DECLARE @KT INT
SET @KT=EXEC TT_XUAT
EXEC TT_XUAT

---VIẾT LẠI BẰNG HÀM:
GO
alter FUNCTION HAM_OUT()
RETURNS INT
AS
BEGIN
	DECLARE @SQL VARCHAR(5000)
	SET @SQL='BCP "SELECT * FROM [ADMIN\SQLEXPRESS].[DB_QLDA].[DBO].[CHUDAUTU]" QUERYOUT "E:\CDT.TXT" -c -T -t; -S ADMIN\SQLEXPRESS -U sa -P 123'
	EXEC MASTER..XP_CMDSHELL @SQL
	RETURN 1
END

GO
DECLARE @KQ INT
SET @KQ=DBO.HAM_OUT()
IF(@KQ=1)
	PRINT 'XUAT FILE THANH CONG' 
ELSE
	PRINT 'XUAT FILE KHONG THANH CONG'

--3. Viết các thủ tục liên quan đến việc tìm kiếm (Nhập vào 1 mã KH, xuất ra các thông tin về dự án KH đó đang sở hữu) 
GO
Create proc TT_FIND_DA @MAKH varchar(30)
as 
begin
	select DA.*
	from KHACHHANG KH, DUAN DA
	where KH.MADUAN=DA.MADUAN AND MAKH=@MAKH
end

GO
declare @MAKH varchar(30) ='KH001'
exec TT_FIND_DA @MAKH

---VIẾT LẠI BẰNG HÀM:
GO
CREATE FUNCTION HAM_TIMKIEM(@MAKH VARCHAR(30))
RETURNS TABLE
AS
	RETURN(	select DA.*
	from KHACHHANG KH, DUAN DA
	where KH.MADUAN=DA.MADUAN AND MAKH=@MAKH)

GO
DECLARE @MAKH VARCHAR(30)
SET @MAKH='KH002'
SELECT * FROM DBO.HAM_TIMKIEM(@MAKH)


--4. Viết các thủ tục liên quan đến việc thêm (Thêm 1 KH mới vào trong table) 
go
create proc TT_THEM_KH 	@MAKH VARCHAR(30), @HOTEN NVARCHAR(50), @NGAYSINH DATE, @GTINH NVARCHAR(10), @NGAYMUA_THUE DATE, @MADUAN VARCHAR(30)
as
BEGIN
	Insert into KHACHHANG
	values (@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN)
END

GO
SET DATEFORMAT DMY
DECLARE @MAKH VARCHAR(30)='KH008', @HOTEN NVARCHAR(50)=N'KHÁCH HÀNG MỚI', @NGAYSINH DATE='01/03/2008', @GTINH NVARCHAR(10)=N'NỮ', @NGAYMUA_THUE DATE='07/09/2025', @MADUAN VARCHAR(30)='DA001'
EXEC TT_THEM_KH @MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN

SELECT * FROM KHACHHANG

---VIẾT LẠI BẰNG HÀM:
GO
CREATE FUNCTION HAM_THEM(@MAKH VARCHAR(30), @HOTEN NVARCHAR(50), @NGAYSINH DATE, @GTINH NVARCHAR(10), @NGAYMUA_THUE DATE, @MADUAN VARCHAR(30))
RETURNS @MOI TABLE (MAKH VARCHAR(30), HOTEN NVARCHAR(50), NGAYSINH DATE, GTINH NVARCHAR(10), NGAYMUA_THUE DATE, MADUAN VARCHAR(30))
AS
BEGIN
	INSERT INTO @MOI
	values (@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN)
	RETURN
END
GO
SET DATEFORMAT DMY
DECLARE @MAKH VARCHAR(30)='KH007', @HOTEN NVARCHAR(50)=N'KHÁCH HÀNG MỚI', @NGAYSINH DATE='01/03/2008', @GTINH NVARCHAR(10)=N'NỮ', @NGAYMUA_THUE DATE='07/09/2025', @MADUAN VARCHAR(30)='DA001'
INSERT INTO KHACHHANG
SELECT * FROM DBO.HAM_THEM(@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN)
SELECT *FROM KHACHHANG



--5. Viết các thủ tục liên quan đến việc xóa (Xóa hết thông tin KH đó, khi truyền vào 1 mã KH) 
go
create proc TT_XOA_KH @MAKH VARCHAR(30)
as
BEGIN
	DELETE FROM KHACHHANG WHERE MAKH=@MAKH
END

GO
DECLARE @MAKH VARCHAR(30)='KH001'
EXEC TT_XOA_KH @MAKH

SELECT * FROM KHACHHANG

---VIẾT LẠI BẰNG HÀM:
GO
CREATE FUNCTION HAM_XOA(@MAKH VARCHAR(30))
RETURNS @0MOI TABLE (MAKH VARCHAR(30), HOTEN NVARCHAR(50), NGAYSINH DATE, GTINH NVARCHAR(10), NGAYMUA_THUE DATE, MADUAN VARCHAR(30))
AS
BEGIN
	INSERT INTO @0MOI
	SELECT * FROM KHACHHANG WHERE MAKH!=@MAKH
	RETURN
END

GO
DECLARE @MAKH VARCHAR(30)='KH001'
DELETE FROM KHACHHANG WHERE MAKH NOT IN ( SELECT MAKH FROM DBO.HAM_XOA(@MAKH))

SELECT * FROM KHACHHANG

--6. Viết các thủ tục liên quan đến việc sửa (Sửa thông tin 1 KH) 
go
create proc TT_SUA_KH @MAKH VARCHAR(30), @HOTEN NVARCHAR(50), @NGAYSINH DATE, @GTINH NVARCHAR(10), @NGAYMUA_THUE DATE, @MADUAN VARCHAR(30)
as
BEGIN
	IF (CONCAT(@MAKH,@MADUAN) IN (SELECT CONCAT(MAKH,MADUAN)FROM KHACHHANG))
		BEGIN
			UPDATE KHACHHANG
			SET MAKH=@MAKH, HOTEN=@HOTEN,NGAYSINH=@NGAYSINH,GTINH=@GTINH,NGAYMUA_THUE=@NGAYMUA_THUE,MADUAN=@MADUAN
			WHERE MAKH =@MAKH AND MADUAN=@MADUAN
		END
	ELSE
		BEGIN
			PRINT N'KHÁCH HÀNG KHÔNG TỒN TẠI'
			RETURN
		END
END

GO
SET DATEFORMAT DMY
DECLARE @MAKH VARCHAR(30)='KH002', @HOTEN NVARCHAR(50)=N'MỚI SỬA', @NGAYSINH DATE='01/03/2008', @GTINH NVARCHAR(10)=N'NỮ', @NGAYMUA_THUE DATE='07/09/2025', @MADUAN VARCHAR(30)='DA002'
EXEC TT_SUA_KH @MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN

SELECT * FROM KHACHHANG

---VIẾT LẠI BẰNG HÀM:
GO
CREATE FUNCTION HAM_SUA(@MAKH VARCHAR(30), @HOTEN NVARCHAR(50), @NGAYSINH DATE, @GTINH NVARCHAR(10), @NGAYMUA_THUE DATE, @MADUAN VARCHAR(30))
RETURNS @MOI TABLE (MAKH VARCHAR(30), HOTEN NVARCHAR(50), NGAYSINH DATE, GTINH NVARCHAR(10), NGAYMUA_THUE DATE, MADUAN VARCHAR(30))
AS
BEGIN
	INSERT INTO @MOI
	SELECT * FROM KHACHHANG WHERE MAKH=@MAKH AND MADUAN=@MADUAN
			UPDATE @MOI
			SET HOTEN=@HOTEN,NGAYSINH=@NGAYSINH,GTINH=@GTINH,NGAYMUA_THUE=@NGAYMUA_THUE
			WHERE MAKH =@MAKH AND MADUAN=@MADUAN
			RETURN
END

GO
SET DATEFORMAT DMY
DECLARE @MAKH VARCHAR(30)='KH002', @HOTEN NVARCHAR(50)=N'MỚI SỬA', @NGAYSINH DATE='01/03/2008', @GTINH NVARCHAR(10)=N'NỮ', @NGAYMUA_THUE DATE='07/09/2025', @MADUAN VARCHAR(30)='DA002'
UPDATE KHACHHANG
SET HOTEN = (SELECT HOTEN FROM DBO.HAM_SUA(@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN))
WHERE MAKH=@MAKH AND MADUAN=@MADUAN

UPDATE KHACHHANG
SET NGAYSINH = (SELECT NGAYSINH FROM DBO.HAM_SUA(@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN))
WHERE MAKH=@MAKH AND MADUAN=@MADUAN

UPDATE KHACHHANG
SET GTINH = (SELECT GTINH FROM DBO.HAM_SUA(@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN))
WHERE MAKH=@MAKH AND MADUAN=@MADUAN

UPDATE KHACHHANG
SET NGAYMUA_THUE = (SELECT NGAYMUA_THUE FROM DBO.HAM_SUA(@MAKH,@HOTEN,@NGAYSINH,@GTINH,@NGAYMUA_THUE,@MADUAN))
WHERE MAKH=@MAKH AND MADUAN=@MADUAN

SELECT * FROM KHACHHANG


----------------------------TẠO TRIGGER RÀNG BUỘC - ĐỒ ÁN TUẦN 08------------------------------

--1. 1 KHÁCH HÀNG CHỈ SỞ HỮU TỐI ĐA 3 DỰ ÁN
GO
CREATE TRIGGER TRG_HANCHESOHUU_KH ON KHACHHANG
FOR INSERT, UPDATE
AS
BEGIN
	BEGIN TRAN
	DECLARE @MAKH VARCHAR(30),@SOLUONG_SOHUU INT
	SELECT @MAKH=(SELECT MAKH FROM inserted)
	SELECT @SOLUONG_SOHUU=(SELECT COUNT(*) FROM KHACHHANG WHERE MAKH=@MAKH GROUP BY MAKH)
	IF (@SOLUONG_SOHUU>3)
	BEGIN
		RAISERROR (N'SỐ LƯỢNG DỰ ÁN KH SỞ HỮU ĐÃ VƯỢT GIỚI HẠN !!!',16,1)
		ROLLBACK TRAN
	END
	ELSE
	BEGIN
		PRINT (N'THÊM HOẶC SỬA THÔNG TIN KHÁCH HÀNG THÀNH CÔNG !!!')
		COMMIT TRAN
	END
	COMMIT TRAN
END

DROP TRIGGER TRG_HANCHESOHUU_KH
--TEST DỮ LIỆU
GO
SELECT * FROM KHACHHANG

SET DATEFORMAT DMY
INSERT INTO KHACHHANG
VALUES('KH001',N'LÊ A','01/03/2001',N'NAM','31/05/2020','DA004')

UPDATE KHACHHANG
SET MAKH='KH001'
WHERE MAKH='KH005'


--2. NGÀY MUA (THUÊ) PHẢI LỚN HƠN NGÀY HOẶC BẰNG NGÀY SINH
GO
CREATE TRIGGER TRG_CHECKNGAYMUATHUE_KH ON KHACHHANG
FOR INSERT, UPDATE
AS
BEGIN
	BEGIN TRAN
	DECLARE @NGAYMUA_THUE DATE, @NGAYSINH DATE
	SELECT @NGAYMUA_THUE=NGAYMUA_THUE, @NGAYSINH=NGAYSINH FROM inserted
	IF(DATEDIFF(DAY,@NGAYSINH,@NGAYMUA_THUE)>=0)
	BEGIN
		PRINT N'THÔNG TIN NGÀY MUA THUÊ VÀ NGÀY SINH HỢP LỆ !!!'
		COMMIT TRAN
	END
	ELSE
	BEGIN
		RAISERROR(N'THÔNG TIN NGÀY MUA THUÊ HOẶC NGÀY SINH KHÔNG HỢP LỆ !!!',16,1)
		ROLLBACK TRAN
	END
	COMMIT TRAN
END

DROP TRIGGER TRG_CHECKNGAYMUATHUE_KH
--TEST DỮ LIỆU
GO
SELECT * FROM KHACHHANG
DROP TRIGGER TRG_HANCHESOHUU_KH

SET DATEFORMAT DMY
INSERT INTO KHACHHANG
VALUES('KH006',N'BÀ 6','05/07/1975',N'NỮ','31/05/1976','DA002')

DELETE FROM KHACHHANG WHERE MAKH='KH006'



--3. NGÀY DKKD <= NGÀY MUA (THUÊ) TRIGGER ĐẶT TRÊN TABLE KHACHAHG
GO
CREATE TRIGGER TRG_CHECKNGAYDKKD_NGAYMUATHUE_KH ON KHACHHANG
FOR INSERT,UPDATE
AS
BEGIN
	BEGIN TRAN
		DECLARE @MADUAN VARCHAR(30),@NGAYMUA_THUE DATE, @NGAY_DKKD_MIN DATE
		SELECT @MADUAN=MADUAN, @NGAYMUA_THUE=NGAYMUA_THUE FROM inserted
		SELECT @NGAY_DKKD_MIN=(SELECT TOP 1 NGAY_DKKD
								FROM CHUDAUTU
								WHERE MADUAN=@MADUAN
								GROUP BY MACDT,NGAY_DKKD
								ORDER BY DATEDIFF(DAY,NGAY_DKKD,GETDATE()) ASC)
		IF (DATEDIFF(DAY,@NGAY_DKKD_MIN,@NGAYMUA_THUE)>=0)
		BEGIN
			PRINT(N'NGÀY DKKD OR NGÀY MUA THUÊ HỢP LỆ RỒI NHÉ !!!')
			COMMIT TRAN
		END
		ELSE
		BEGIN
			RAISERROR (N'NGÀY DKKD OR NGÀY MUA THUÊ KHÔNG HỢP LỆ !!!',16,1)
			ROLLBACK TRAN
		END

	COMMIT TRAN
END


DROP TRIGGER TRG_CHECKNGAYDKKD_NGAYMUATHUE_KH


--TEST DỮ LIỆU
GO
SELECT * FROM CHUDAUTU
SELECT * FROM KHACHHANG
DROP TRIGGER TRG_HANCHESOHUU_KH
DROP TRIGGER TRG_CHECKNGAYMUATHUE_KH


SET DATEFORMAT DMY
INSERT INTO KHACHHANG
VALUES('KH008',N'BÀ 8','05/07/1975',N'NỮ','28/02/2001','DA001')





--4. NĂM MUA (THUÊ) >= NĂM BÀN GIAO > NĂM DKKD
GO
CREATE TRIGGER TRG_CHECKNAMBG_DA ON DUAN
FOR UPDATE,INSERT
AS
BEGIN
	BEGIN TRAN
	DECLARE @NAMBG INT,@MADUAN VARCHAR(30),@NAM_DKKD_GANNHAT INT,@NAM_MUATHUE_XANHAT INT
	SELECT @NAMBG=NAMBG,@MADUAN=MADUAN FROM inserted
	SELECT @NAM_DKKD_GANNHAT=(SELECT TOP 1 YEAR(NGAY_DKKD)
								FROM CHUDAUTU
								WHERE MADUAN=@MADUAN
								GROUP BY MACDT,NGAY_DKKD
								ORDER BY DATEDIFF(DAY,NGAY_DKKD,GETDATE()) ASC)
	SELECT @NAM_MUATHUE_XANHAT=(SELECT TOP 1 YEAR(NGAYMUA_THUE)
								FROM KHACHHANG
								WHERE MADUAN=@MADUAN
								ORDER BY DATEDIFF(DAY,NGAYMUA_THUE,GETDATE()) DESC)
	IF(@NAMBG>@NAM_DKKD_GANNHAT AND @NAMBG<=@NAM_MUATHUE_XANHAT)
	BEGIN
		PRINT(N'NĂM BÀN GIAO HỢP LỆ !!!')
		COMMIT TRAN
	END
	ELSE
	BEGIN
		RAISERROR(N'NĂM BÀN GIAN KHÔNG HỢP LỆ !!!',16,1)
		ROLLBACK TRAN
	END
	COMMIT TRAN
END


DROP TRIGGER TRG_CHECKNAMBG_DA

--TEST DỮ LIỆU
GO
SELECT * FROM DUAN
SELECT * FROM CHUDAUTU
SELECT * FROM KHACHHANG
DROP TRIGGER TRG_HANCHESOHUU_KH
DROP TRIGGER TRG_CHECKNGAYMUATHUE_KH
DROP TRIGGER TRG_CHECKNGAYDKKD_NGAYMUATHUE_KH

SET DATEFORMAT DMY
UPDATE KHACHHANG
SET NGAYMUA_THUE='02/03/2003'
WHERE MAKH='KH007'

UPDATE DUAN
SET NAMBG=2003
WHERE MADUAN='DA001'




--5. 1 CHỦ ĐẦU TƯ CHỈ ĐƯỢC ĐĂNG KÍ KINH DOANH TỐI ĐA 3 DỰ ÁN
GO
CREATE TRIGGER TRG_HANCHESOHUUDA_CDT ON CHUDAUTU
FOR INSERT, UPDATE
AS
BEGIN
	BEGIN TRAN
	DECLARE @MACDT VARCHAR(30),@SOLUONG_DKKD INT
	SELECT @MACDT=(SELECT MACDT FROM inserted)
	SELECT @SOLUONG_DKKD=(SELECT COUNT(DISTINCT MADUAN) FROM CHUDAUTU WHERE MACDT=@MACDT GROUP BY MACDT)
	IF (@SOLUONG_DKKD>3)
	BEGIN
		RAISERROR (N'SỐ LƯỢNG DỰ ĐĂNG KÝ KINH DOANH DỰ ÁN ĐÃ VƯỢT GIỚI HẠN !!!',16,1)
		ROLLBACK TRAN
	END
	ELSE
	BEGIN
		PRINT (N'THÊM HOẶC SỬA THÔNG TIN CHỦ ĐẦU TƯ THÀNH CÔNG !!!')
		COMMIT TRAN
	END
	COMMIT TRAN
END

--TEST DỮ LIỆU
GO
SELECT * FROM CHUDAUTU
DROP TRIGGER TRG_HANCHESOHUU_KH
DROP TRIGGER TRG_CHECKNGAYMUATHUE_KH
DROP TRIGGER TRG_CHECKNGAYDKKD_NGAYMUATHUE_KH
DROP TRIGGER TRG_CHECKNAMBG_DA
DROP TRIGGER TRG_HANCHESOHUUDA_CDT

SET DATEFORMAT DMY
INSERT INTO CHUDAUTU
VALUES('CDT002',N'KHANG ĐIỀN','04/09/1996','T001','DA004')




-----------------------------ĐỒ ÁN TUẦN 09------------------------------

-----------1 cursor CN1 In ra du an co MAKD ----------
GO
Declare cs_induancoMAKD cursor 
for 
	select MADUAN,TENDUAN,MAKD
	from DUAN
open  cs_induancoMAKD

go
declare @mada varchar(30),@tenduan nvarchar(50),@makd nvarchar(30)
	fetch next from  cs_induancoMAKD into @mada,@tenduan,@makd
while(@@FETCH_STATUS=0 and @makd is not null)
	begin
	print  @mada+' '+@tenduan+' '+@makd
	fetch next from  cs_induancoMAKD into @mada,@tenduan,@makd
	end
--Dong cursor
Close   cs_induancoMAKD

--Huy cursor
deallocate   cs_induancoMAKD

------------------------------------
----------proc trong do co 2 cursor tro len----------
--------------Nhap MaKH de lay so luong du an KH do co---------

go
create proc p_doan @kh varchar(30) as
	begin
		declare @hoten nvarchar(50),@ngaysinh date,@gtinh  nvarchar(10),@sl int
		declare laydanhsach   cursor  for
		select distinct maKh,HOTEN,NGAYSINH,GTINH from KHACHHANG where @kh=MAKH
		open laydanhsach
		fetch next from laydanhsach into @kh,@hoten,@ngaysinh,@gtinh
		if(@@FETCH_STATUS=0)
		begin
					declare laysoluongduan  cursor for 
					select count(MAKH) as 'so luong du an' from KHACHHANG where @kh=MAKH group by MAKH
					open laysoluongduan
						fetch next from laysoluongduan into @sl 
						if(@@FETCH_STATUS=0)
							print @kh+' '+@hoten+' '+convert(nvarchar(10),@ngaysinh)+' '+@gtinh+' '+convert(char(20),@sl)
						close laysoluongduan
						deallocate laysoluongduan
		end
		close laydanhsach
		deallocate laydanhsach
	end
select*from KHACHHANG
exec p_doan 'KH005'
---------------------------------
-----------sử dụng trigger, trigger này có gọi chạy 1 thủ tục và thủ tục này có sử dụng cursor---------------
--------------------Tự đọng cập nhật MAKD của DuAn khi thêm MAKD của KhuDat----------------
go
create proc P_BTDOA
as 
begin
	declare cs_btdoan cursor dynamic
	for
	select * from DUAN 

	open cs_btdoan

	declare @mada varchar(30),@tenda varchar(50),@diachi nvarchar(50),@nambg int,@makd varchar(30)
	fetch next from cs_btdoan into @mada,@tenda,@diachi,@nambg,@makd
	while (@@fetch_status = 0)
	begin 
		update DUAN
		set MAKD=(select MAKD from KHUDAT where MADUAN=@mada)
		where @mada=MADUAN
		fetch next from cs_btdoan into @mada,@tenda,@diachi,@nambg,@makd
	end
close cs_btdoan
deallocate cs_btdoan
end
go


create trigger tg_DA on Khudat 
for insert, update, delete as
begin tran
	exec dbo.P_BTDOA
commit tran


INSERT INTO KHUDAT (MAKD,CHUSOHUU)
VALUES('KD009','NGUYỄN VĂN A')

update KHUDAT set MADUAN ='DA009' where MAKD='KD009'

Insert into DUAN(MADUAN,TENDUAN,DIACHI,NAMBG)
values ('DA009','NDT2','HCM2',2020)
--------------------------2 cursor----------------
-----------------------------Liet ke Ten thue , Loai thue cua cac Chu dau tu---------
declare @macdt varchar(30), @tencdt nvarchar(50),@msthue varchar(30),@tenthue nvarchar(50) ,@loaithue nvarchar(50)
declare cs_timThue cursor dynamic for
	select MACDT, TENCDT ,CDT.MASOTHUE from CHUDAUTU CDT
	open cs_timThue
	while(1=1)
	begin
	fetch next from cs_timTHue into @macdt,@tencdt,@msthue
		if(@@FETCH_STATUS=0)
			begin 
				declare layloaithue cursor dynamic for
				select TENTHUE,LOAITHUE from THUE T, CHUDAUTU where T.MASOTHUE=CHUDAUTU.MASOTHUE
				open layloaithue
				while(1=1)
				begin
					fetch next from layloaithue into @tenthue,@loaithue
					if(@@FETCH_STATUS=0)
						begin
						print @macdt+' '+@tencdt+' '+@msthue+' '+@tenthue+' '+@loaithue
						fetch next from cs_timTHue into @macdt,@tencdt,@msthue
						end
					else
						break
				end
					Close layloaithue
					deallocate layloaithue
			end
		else 
			break
	end
			Close cs_timThue
			deallocate cs_timThue
---------------------Function+ Cursor------------------
--------------Khi nhap ma khach hang in ra chi tiet du an cua khach hang do
go
create function F_DOAN (@MAKH varchar(30))
returns @bangmoi table (MADUAN varchar(30),TENDUAN nvarchar(50),DIACHI nvarchar(50),NAMBG int,MAKD varchar(30))
as
begin
	declare @mada varchar(30),@TENDUAN nvarchar(50),@DIACHI nvarchar(50),@NAMBG int,@MAKD varchar(30)
	declare CS_timdanhsach cursor dynamic
	for 
		select DA.MADUAN,TENDUAN,DIACHI,NAMBG,MAKD from DUAN DA, KHACHHANG kh where @MAKH=kh.MAKH and KH.MADUAN=DA.MADUAN
		open CS_timdanhsach
		while(1=1)
		begin
		fetch next from CS_timdanhsach into @mada ,@TENDUAN,@DIACHI,@NAMBG,@MAKD
		if(@@FETCH_STATUS=0)
					INSERT INTO @bangmoi
					SELECT @mada ,@TENDUAN,@DIACHI,@NAMBG,@MAKD
					else
					break
		end
		Close CS_timdanhsach
		deallocate CS_timdanhsach
					return 
end
SELECT * FROM dbo.F_DOAN('KH003')




-----------------------------ĐỒ ÁN TUẦN 10------------------------------

------1. Bổ sung chức năng sao lưu, phục hồi trên ứng dụng cho phép người dùng có thể thực hiện.
GO
ALTER DATABASE DB_QLDA
SET RECOVERY FULL

--Sao Lưu
GO
CREATE PROC TT_BACKUP
AS
BEGIN
	BACKUP DATABASE DB_QLDA TO DISK='F:\QLCSDL_DOAN\FULL_BACKUP.BAK' WITH INIT
END

GO
EXEC DBO.TT_BACKUP


--Khôi phục
GO
CREATE PROC TT_RESTORE
AS
BEGIN
	ALTER DATABASE DB_QLDA
	SET OFFLINE WITH ROLLBACK IMMEDIATE

	RESTORE DATABASE DB_QLDA FROM DISK='F:\QLCSDL_DOAN\FULL_BACKUP.BAK' WITH REPLACE, RECOVERY

	ALTER DATABASE DB_QLDA
	SET ONLINE
END

GO
USE master
EXEC DBO.TT_RESTORE


------2. Thực hiện phân quyền người dùng: Trong hệ thống có ít nhất 5 loại người dùng khác nhau (kể cả người dùng quản trị). Tạo chức năng cho phép người quản trị người dùng  (tạo, xóa) và phân quyền người dùng

--Các loại người dùng: Thông thường, Trung cấp, Vip, SuperVip, Quản Trị
GO
sp_addrole 'Thong_thuong'
GO
sp_addrole 'Trung_cap'
GO
sp_addrole 'Vip'
GO
sp_addrole 'Super_Vip'
GO
sp_addrole 'Quan_tri'


------3. Tạo chức năng cho phép người quản trị tạo nhóm quyền (tạo, xóa) và thêm/ xóa người dùng ở các nhóm quyền

---->>>>>>>>>>(ĐÃ THỰC HIỆN TRÊN JAVA)<<<<<--------


------4. Kết hơp trigger cho phép khi tạo mới một người dùng thì mặc định được phân quyền hoặc nhóm quyền mặc định trong hệ thống.

---KHI TẠO 1 NGƯỜI DÙNG MẶC ĐỊNH (ĐĂNG KÍ Ở FROM ĐĂNG NHẬP) -->THÌ ĐƯỢC SẾP VÀO NHÓM QUYỀN "THÔNG THƯỜNG" (DEFAULT 'KH')

-- (CHƯA LÀM RA)
GO
SELECT * FROM TAIKHOAN

GO
CREATE TRIGGER PHANQUYEN_NGUOIDUNG_DEFAULT ON TAIKHOAN
FOR INSERT
AS
BEGIN
	BEGIN TRAN
		SET TRANSACTION ISOLATION LEVEL SERIALIZABLE

		DECLARE @USER VARCHAR(50),@PASS VARCHAR(50)	
		
			BEGIN TRAN
				SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
				SELECT @USER = TEN, @PASS = PASS FROM inserted
			COMMIT TRAN
			
			BEGIN TRAN
				SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
				EXEC DBO.TT_TAOLOGIN @USER, @PASS
				
			COMMIT TRAN

			BEGIN TRAN
				SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
				EXEC DBO.TT_TAOUSER @USER, @USER
				
			COMMIT TRAN

			BEGIN TRAN
				SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
				EXEC TT_ADDGROUP 'Thong_thuong', @USER
				
			COMMIT TRAN

	COMMIT TRAN
END

DROP TRIGGER PHANQUYEN_NGUOIDUNG_DEFAULT


GO
CREATE PROC TT_TAOLOGIN @USER VARCHAR(30), @PASS VARCHAR(50)
AS
BEGIN
	EXEC sp_addlogin @USER, @PASS
END

DROP PROC TT_TAOLOGIN


GO
CREATE PROC TT_TAOUSER @USER_LOGIN VARCHAR(30), @USER VARCHAR(30)
AS
BEGIN
	EXEC sp_adduser @USER_LOGIN, @USER
END

DROP PROC TT_TAOUSER


GO
CREATE PROC TT_ADDGROUP @NHOM VARCHAR(50), @USER VARCHAR(30)
AS
BEGIN
	EXEC sp_addrolemember @NHOM, @USER
END

DROP PROC TT_ADDGROUP


GO
INSERT INTO TAIKHOAN
VALUES('ABC','123','X')






-----------------------------ĐỒ ÁN TUẦN 11------------------------------
GO
SELECT * FROM DUAN
SELECT * FROM KHACHHANG

--1. KHI CẬP NHẬT THÔNG TIN BÊN TABLE KHACHHANG THÌ TỰ ĐỘNG CẬP NHẬT SOLUONG_KH BÊN TABLE DUAN. (ÁP DỤNG: READ UNCOMMITTED) 
GO
CREATE TRIGGER TRG_UPDATE_SL_KH ON KHACHHANG
FOR UPDATE
AS
BEGIN
	BEGIN TRAN
		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

			UPDATE DUAN
			SET SOLUONG_KH=(SELECT COUNT(*) FROM KHACHHANG WHERE MADUAN= (SELECT MADUAN FROM deleted))
			WHERE DUAN.MADUAN=(SELECT MADUAN FROM deleted)
				
			SELECT * FROM DUAN WHERE MADUAN= (SELECT MADUAN FROM deleted) OR MADUAN= (SELECT MADUAN FROM inserted)
		COMMIT TRAN


		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

			UPDATE DUAN
			SET SOLUONG_KH=(SELECT COUNT(*) FROM KHACHHANG WHERE MADUAN= (SELECT MADUAN FROM inserted))
			WHERE DUAN.MADUAN=(SELECT MADUAN FROM inserted)
	
			SELECT * FROM DUAN WHERE MADUAN= (SELECT MADUAN FROM deleted) OR MADUAN= (SELECT MADUAN FROM inserted)
		COMMIT TRAN


	COMMIT TRAN
END

DROP TRIGGER TRG_UPDATE_SL_KH

GO
UPDATE KHACHHANG
SET MADUAN='DA002'
WHERE MAKH='KH003'


--2. KHI CẬP NHẬT THÔNG TIN TRÊN TABLE DUAN (NĂM BÀN GIAO MÀ LỚN HƠN 0) THÌ TỰ ĐỘNG UPDATE TÊN DỰ ÁN ĐÓ LÀ 'DU AN MOI'. (ÁP DỤNG: READ COMMITTED) 
GO
SELECT * FROM DUAN

GO
CREATE TRIGGER TRG_SELECT_DUAN ON DUAN
FOR UPDATE
AS
BEGIN
	BEGIN TRAN
		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL READ COMMITTED

			IF((SELECT NAMBG FROM inserted)<=0)
			BEGIN
				ROLLBACK TRAN
			END
			ELSE
			BEGIN
				UPDATE DUAN
				SET TENDUAN='DU AN MOI'
				WHERE MADUAN=(SELECT MADUAN FROM inserted)
			END
		COMMIT TRAN


		BEGIN TRAN
			SELECT * FROM DUAN
		COMMIT TRAN


	COMMIT TRAN
END

DROP TRIGGER TRG_SELECT_DUAN

GO
UPDATE DUAN
SET NAMBG=2020
WHERE MADUAN='DA002'



--3. KHI UPDATE DỮ LIỆU TRONG TABLE CHUDAUTU, THÌ XUẤT RA THÔNG TIN DỰ ÁN THUỘC CHUDAUTU ĐÓ, ĐỒNG THỜI UPDATE LẠI SOLUONG_CDT TRÊN TABLE DUAN. (ÁP DỤNG: REPEATABLE READ) 
GO
SELECT * FROM CHUDAUTU
SELECT * FROM DUAN

GO
CREATE TRIGGER TRG_SELECT_CHUDAUTU ON CHUDAUTU
FOR UPDATE
AS
BEGIN	
	BEGIN TRAN
		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL REPEATABLE READ
			PRINT N'NHỮNG DỰ ÁN BỊ ẢNH HƯỞNG LÀ: '
			SELECT *
			FROM DUAN
			WHERE MADUAN=(SELECT MADUAN FROM inserted) OR MADUAN=(SELECT MADUAN FROM deleted)
		COMMIT TRAN


		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL REPEATABLE READ

			UPDATE DUAN
			SET SOLUONG_CDT = (SELECT COUNT(MACDT) FROM CHUDAUTU CDT, DUAN DA WHERE CDT.MADUAN=DA.MADUAN AND DA.MADUAN=(SELECT MADUAN FROM deleted))
			WHERE DUAN.MADUAN=(SELECT MADUAN FROM deleted)

			UPDATE DUAN
			SET SOLUONG_CDT = (SELECT COUNT(MACDT) FROM CHUDAUTU CDT, DUAN DA WHERE CDT.MADUAN=DA.MADUAN AND DA.MADUAN=(SELECT MADUAN FROM inserted))
			WHERE DUAN.MADUAN=(SELECT MADUAN FROM inserted)
		COMMIT TRAN


		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL REPEATABLE READ
			PRINT N'DỰ ÁN BỊ ẢNH HƯỞNG SAU KHI ĐÃ UPDATE LẠI LÀ: '
			SELECT *
			FROM DUAN
			WHERE MADUAN=(SELECT MADUAN FROM inserted) OR MADUAN=(SELECT MADUAN FROM deleted)
		COMMIT TRAN

	COMMIT TRAN	
END

DROP TRIGGER TRG_SELECT_CHUDAUTU

GO
UPDATE CHUDAUTU
SET MADUAN='DA003'
WHERE MACDT='CDT001'



--4. KHI THEM,CẬP NHẬT THÔNG TIN TRÊN TABLE KHUDAT THÌ TỰ ĐỘNG UPDATE MÃ KHU ĐẤT CHO CÁC DỰ ÁN CHƯA CÓ KHU ĐẤT(ÁP DỤNG: SERIALIZABLE) 
GO
SELECT * FROM DUAN
SELECT * FROM KHUDAT
GO
CREATE TRIGGER TRIG_KHUDAT on KHUDAT
FOR INSERT,UPDATE
AS
BEGIN
	BEGIN TRAN
		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
			PRINT N'NHỮNG DỰ ÁN BỊ ẢNH HƯỞNG LÀ: '
			SELECT *
			FROM DUAN
			WHERE MADUAN=(SELECT MADUAN FROM inserted) OR MADUAN=(SELECT MADUAN FROM deleted)
		COMMIT TRAN

		BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
				UPDATE DUAN
				SET MAKD=(SELECT KD.MAKD FROM KHUDAT KD,DUAN DA WHERE DA.MAKD=KD.MAKD and DA.MADUAN=(SELECT MADUAN FROM deleted))
				WHERE DUAN.MADUAN=(SELECT MADUAN FROM deleted)

				UPDATE DUAN
				SET MAKD=(SELECT KD.MAKD FROM KHUDAT KD,DUAN DA WHERE DA.MAKD=KD.MAKD and DA.MADUAN=(SELECT MADUAN FROM inserted))
				WHERE DUAN.MADUAN=(SELECT MADUAN FROM inserted)
		COMMIT TRAN

				BEGIN TRAN
			SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
			PRINT N'DỰ ÁN BỊ ẢNH HƯỞNG SAU KHI ĐÃ UPDATE LẠI LÀ: '
			SELECT *
			FROM DUAN
			WHERE MADUAN=(SELECT MADUAN FROM inserted) OR MADUAN=(SELECT MADUAN FROM deleted)
		COMMIT TRAN

	COMMIT TRAN	
END

DROP TRIGGER TRIG_KHUDAT

GO
INSERT INTO KHUDAT
VALUES
('KD006','NGUYEN VAN D','DA006')
update KHUDAT
set MADUAN='DA007'
where MAKD='KD006'



-----------------------------@BẢN QUYỀN THUỘC LÊ LƯU HOÀNG NHÂN + NGUYỄN DUY THỊNH---------------------------------